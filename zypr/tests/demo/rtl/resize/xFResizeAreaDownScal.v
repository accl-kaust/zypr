// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFResizeAreaDownScal (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_rows_read,
        stream_in_cols_read,
        stream_in_data_V_dout,
        stream_in_data_V_empty_n,
        stream_in_data_V_read,
        resize_out_rows_read,
        resize_out_cols_read,
        resize_out_data_V_din,
        resize_out_data_V_full_n,
        resize_out_data_V_write
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_pp1_stage0 = 40'd274877906944;
parameter    ap_ST_fsm_state44 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] stream_in_rows_read;
input  [31:0] stream_in_cols_read;
input  [7:0] stream_in_data_V_dout;
input   stream_in_data_V_empty_n;
output   stream_in_data_V_read;
input  [31:0] resize_out_rows_read;
input  [31:0] resize_out_cols_read;
output  [7:0] resize_out_data_V_din;
input   resize_out_data_V_full_n;
output   resize_out_data_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_data_V_read;
reg resize_out_data_V_write;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_in_data_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln686_reg_1981;
reg   [0:0] icmp_ln755_reg_2042;
reg    resize_out_data_V_blk_n;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] DDR_wr_en_reg_2126;
reg   [0:0] DDR_wr_en_reg_2126_pp1_iter3_reg;
reg   [0:0] icmp_ln809_reg_2165;
reg   [0:0] icmp_ln809_reg_2165_pp1_iter3_reg;
reg   [31:0] indvar_flatten_reg_245;
reg   [15:0] t_V_1_reg_256;
reg   [15:0] accum_reg_overlap_V_s_reg_267;
reg   [15:0] accum_reg_overlap_V_1_reg_279;
reg   [15:0] accum_reg_V_0_1_1_reg_291;
reg   [15:0] accum_reg_V_0_0_1_reg_303;
reg   [31:0] p_Val2_9_reg_315;
reg   [31:0] p_Val2_10_reg_325;
reg   [15:0] p_Val2_12_reg_336;
reg   [15:0] empty_12_reg_348;
reg   [0:0] t2_reg_360;
reg   [15:0] output_buffer_index_s_reg_372;
wire   [15:0] height_fu_383_p1;
reg   [15:0] height_reg_1790;
wire   [15:0] width_fu_387_p1;
reg   [15:0] width_reg_1795;
wire   [31:0] zext_ln29_fu_395_p1;
reg   [31:0] zext_ln29_reg_1802;
wire   [31:0] zext_ln29_1_fu_405_p1;
reg   [31:0] zext_ln29_1_reg_1813;
wire   [31:0] zext_ln29_2_fu_433_p1;
reg   [31:0] zext_ln29_2_reg_1829;
wire   [31:0] grp_fu_409_p2;
reg   [31:0] out_div_reg_1835;
wire    ap_CS_fsm_state36;
wire   [31:0] grp_fu_421_p2;
reg   [31:0] out_div_1_reg_1840;
wire   [16:0] trunc_ln29_fu_443_p1;
reg   [16:0] trunc_ln29_reg_1852;
wire   [31:0] grp_fu_437_p2;
reg   [31:0] out_div_2_reg_1858;
wire   [16:0] trunc_ln29_1_fu_447_p1;
reg   [16:0] trunc_ln29_1_reg_1869;
wire   [31:0] Xindex_output_initia_fu_451_p2;
reg   [31:0] Xindex_output_initia_reg_1875;
wire   [8:0] dim3_V_fu_463_p2;
wire    ap_CS_fsm_state37;
wire   [16:0] add_ln750_fu_477_p2;
reg   [16:0] add_ln750_reg_1920;
wire    ap_CS_fsm_state38;
wire   [32:0] lhs_V_fu_483_p1;
reg   [32:0] lhs_V_reg_1926;
wire   [0:0] xor_ln1054_fu_493_p2;
reg   [0:0] xor_ln1054_reg_1931;
wire   [0:0] icmp_ln879_fu_499_p2;
reg   [0:0] icmp_ln879_reg_1936;
wire   [32:0] zext_ln215_1_fu_504_p1;
reg   [32:0] zext_ln215_1_reg_1944;
wire   [0:0] xor_ln1054_1_fu_514_p2;
reg   [0:0] xor_ln1054_1_reg_1949;
reg   [0:0] tmp_5_reg_1954;
wire   [16:0] add_ln203_fu_535_p2;
reg   [16:0] add_ln203_reg_1959;
wire   [0:0] xor_ln879_fu_541_p2;
reg   [0:0] xor_ln879_reg_1965;
wire   [31:0] mul_ln750_fu_1738_p2;
reg   [31:0] mul_ln750_reg_1971;
wire   [0:0] icmp_ln879_5_fu_556_p2;
reg   [0:0] icmp_ln879_5_reg_1976;
wire    ap_block_state39_pp1_stage0_iter0;
reg    ap_predicate_op319_read_state40;
reg    ap_block_state40_pp1_stage0_iter1;
wire    ap_block_state41_pp1_stage0_iter2;
wire    ap_block_state42_pp1_stage0_iter3;
reg    ap_predicate_op453_write_state43;
reg    ap_block_state43_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln879_5_reg_1976_pp1_iter1_reg;
wire   [0:0] icmp_ln686_fu_561_p2;
reg   [0:0] icmp_ln686_reg_1981_pp1_iter1_reg;
reg   [0:0] icmp_ln686_reg_1981_pp1_iter2_reg;
wire   [31:0] add_ln686_fu_566_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln692_fu_572_p2;
reg   [0:0] icmp_ln692_reg_1990;
reg   [0:0] icmp_ln692_reg_1990_pp1_iter1_reg;
wire   [15:0] select_ln1597_fu_577_p3;
reg   [15:0] select_ln1597_reg_1995;
wire   [0:0] icmp_ln879_7_fu_595_p2;
reg   [0:0] icmp_ln879_7_reg_2001;
reg   [0:0] icmp_ln879_7_reg_2001_pp1_iter1_reg;
wire   [15:0] select_ln686_fu_600_p3;
wire   [15:0] col_index_fu_612_p2;
reg   [15:0] col_index_reg_2011;
reg   [15:0] p_Result_2_reg_2017;
reg   [15:0] p_Result_2_reg_2017_pp1_iter1_reg;
wire   [0:0] icmp_ln204_fu_642_p2;
reg   [0:0] icmp_ln204_reg_2022;
reg   [0:0] icmp_ln204_reg_2022_pp1_iter1_reg;
wire   [0:0] icmp_ln895_4_fu_647_p2;
reg   [0:0] icmp_ln895_4_reg_2031;
reg   [0:0] icmp_ln895_4_reg_2031_pp1_iter1_reg;
wire   [0:0] icmp_ln218_fu_653_p2;
reg   [0:0] icmp_ln218_reg_2037;
wire   [0:0] icmp_ln755_fu_658_p2;
wire   [31:0] Yindex_output_prev_V_1_fu_668_p3;
wire   [0:0] trunc_ln834_fu_682_p1;
reg   [0:0] trunc_ln834_reg_2051;
reg   [0:0] trunc_ln834_reg_2051_pp1_iter2_reg;
wire   [0:0] icmp_ln703_fu_686_p2;
reg   [0:0] icmp_ln703_reg_2058;
wire   [0:0] trunc_ln214_fu_781_p1;
reg   [0:0] trunc_ln214_reg_2066;
wire   [0:0] or_ln138_1_fu_982_p2;
reg   [0:0] or_ln138_1_reg_2076;
wire   [15:0] Wx_for_Nplus1_Procbl_fu_1030_p3;
reg   [15:0] Wx_for_Nplus1_Procbl_reg_2081;
wire   [0:0] icmp_ln899_1_fu_1038_p2;
reg   [0:0] icmp_ln899_1_reg_2086;
wire   [0:0] and_ln218_1_fu_1049_p2;
reg   [0:0] and_ln218_1_reg_2092;
reg   [0:0] and_ln218_1_reg_2092_pp1_iter2_reg;
wire   [16:0] select_ln237_fu_1083_p3;
reg   [16:0] select_ln237_reg_2097;
wire   [15:0] select_ln750_fu_1104_p3;
reg   [15:0] select_ln750_reg_2102;
wire   [0:0] trunc_ln647_2_fu_1126_p1;
reg   [0:0] trunc_ln647_2_reg_2107;
reg   [8:0] ouput_buffer_0_0_V_2_reg_2115;
reg   [8:0] ouput_buffer_0_0_V_2_reg_2115_pp1_iter2_reg;
wire   [15:0] select_ln750_1_fu_1149_p3;
reg   [15:0] select_ln750_1_reg_2121;
wire   [0:0] DDR_wr_en_fu_1245_p2;
wire   [15:0] select_ln883_fu_1451_p3;
reg   [15:0] select_ln883_reg_2130;
wire   [15:0] accum_reg_0_0_V_fu_1473_p3;
reg   [15:0] accum_reg_0_0_V_reg_2135;
reg    ap_enable_reg_pp1_iter2;
wire   [15:0] accum_reg_overlap_0_fu_1481_p3;
reg   [15:0] accum_reg_overlap_0_reg_2140;
wire   [15:0] select_ln883_2_fu_1556_p3;
reg   [15:0] select_ln883_2_reg_2145;
wire   [15:0] accum_reg_0_1_V_fu_1577_p3;
reg   [15:0] accum_reg_0_1_V_reg_2150;
wire   [15:0] accum_reg_overlap_0_1_fu_1585_p3;
reg   [15:0] accum_reg_overlap_0_1_reg_2155;
wire   [15:0] select_ln528_1_fu_1613_p3;
reg   [15:0] select_ln528_1_reg_2160;
wire   [0:0] icmp_ln809_fu_1624_p2;
wire   [31:0] Yindex_output_V_3_fu_1655_p3;
reg   [31:0] Yindex_output_V_3_reg_2169;
wire   [0:0] and_ln837_1_fu_1695_p2;
reg   [0:0] and_ln837_1_reg_2174;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state39;
reg    ap_enable_reg_pp1_iter3;
reg   [8:0] ouput_buffer_0_0_V_address0;
reg    ouput_buffer_0_0_V_ce0;
reg    ouput_buffer_0_0_V_we0;
wire   [15:0] ouput_buffer_0_0_V_q0;
wire   [8:0] ouput_buffer_0_0_V_address1;
reg    ouput_buffer_0_0_V_ce1;
reg    ouput_buffer_0_0_V_we1;
reg   [15:0] ouput_buffer_0_0_V_d1;
reg   [8:0] t_V_reg_234;
wire   [0:0] icmp_ln887_fu_457_p2;
reg   [15:0] ap_phi_mux_accum_reg_overlap_V_s_phi_fu_271_p4;
reg   [15:0] ap_phi_mux_accum_reg_overlap_V_1_phi_fu_283_p4;
reg   [15:0] ap_phi_mux_accum_reg_V_0_1_1_phi_fu_295_p4;
reg   [15:0] ap_phi_mux_accum_reg_V_0_0_1_phi_fu_307_p4;
reg   [31:0] ap_phi_mux_p_Val2_9_phi_fu_318_p4;
reg   [15:0] ap_phi_mux_p_Val2_12_phi_fu_340_p4;
reg   [15:0] ap_phi_mux_empty_12_phi_fu_352_p4;
reg   [0:0] ap_phi_mux_t2_phi_fu_364_p4;
reg   [15:0] ap_phi_mux_output_buffer_index_s_phi_fu_376_p4;
wire   [63:0] zext_ln544_fu_469_p1;
wire   [63:0] zext_ln544_1_fu_1130_p1;
reg   [31:0] p_Val2_s_fu_154;
wire   [31:0] p_Val2_7_fu_708_p3;
reg   [31:0] p_Val2_1_fu_158;
wire   [31:0] Xindex_output_initia_1_fu_696_p3;
reg   [31:0] out_col_index_1_fu_162;
wire   [31:0] out_col_index_2_fu_1638_p3;
reg   [7:0] p_0359_1_fu_166;
reg   [7:0] DDR_write_data_V_0_0_1_fu_170;
reg    ap_block_pp1_stage0_01001;
wire   [15:0] add_ln321_fu_1706_p2;
wire   [15:0] out_width_fu_391_p1;
wire   [31:0] grp_fu_409_p0;
wire   [15:0] grp_fu_409_p1;
wire   [31:0] grp_fu_421_p0;
wire   [15:0] grp_fu_421_p1;
wire   [31:0] grp_fu_437_p0;
wire   [15:0] grp_fu_437_p1;
wire   [16:0] zext_ln750_fu_474_p1;
wire   [0:0] tmp_2_fu_486_p3;
wire   [0:0] tmp_4_fu_507_p3;
wire   [16:0] and_ln213_fu_520_p2;
wire   [16:0] zext_ln203_fu_532_p1;
wire   [16:0] zext_ln879_fu_552_p1;
wire   [15:0] add_ln700_3_fu_585_p2;
wire   [16:0] zext_ln879_3_fu_591_p1;
wire   [15:0] trunc_ln647_1_fu_618_p1;
wire   [16:0] zext_ln647_1_fu_622_p1;
wire   [16:0] zext_ln834_fu_608_p1;
wire   [16:0] Yindex_output_prev_p_fu_626_p2;
wire   [31:0] Yindex_output_prev_V_fu_663_p2;
wire   [31:0] add_ln700_fu_691_p2;
wire   [31:0] add_ln700_1_fu_703_p2;
wire   [15:0] weight_value_V_fu_719_p1;
wire   [15:0] index_fract_value_V_fu_715_p1;
wire   [15:0] sub_value_V_fu_722_p2;
wire   [15:0] output_buffer_index_1_fu_740_p4;
wire   [0:0] icmp_ln895_fu_734_p2;
wire   [0:0] and_ln72_fu_756_p2;
wire   [0:0] icmp_ln887_1_fu_728_p2;
wire   [0:0] and_ln72_1_fu_761_p2;
wire   [15:0] output_buffer_index_2_fu_750_p2;
wire   [15:0] select_ln72_fu_767_p3;
wire   [15:0] output_buffer_index_s_14_fu_775_p3;
wire   [15:0] index_fract_value_V_1_fu_785_p1;
wire   [15:0] sub_value_V_1_fu_789_p2;
wire   [15:0] output_buffer_index_3_fu_807_p4;
wire   [0:0] icmp_ln895_1_fu_801_p2;
wire   [0:0] and_ln89_fu_829_p2;
wire   [0:0] icmp_ln887_2_fu_795_p2;
wire   [0:0] and_ln89_1_fu_834_p2;
wire   [15:0] output_buffer_index_4_fu_817_p2;
wire   [15:0] select_ln879_fu_823_p3;
wire   [31:0] sub_ln1354_2_fu_848_p2;
wire   [31:0] ret_V_fu_853_p2;
wire   [15:0] int_bits_Xindex_out_s_fu_859_p4;
wire   [31:0] add_ln1354_fu_877_p2;
wire   [15:0] trunc_ln2_fu_883_p4;
wire   [15:0] select_ln703_fu_869_p3;
wire   [16:0] zext_ln215_2_fu_899_p1;
wire   [16:0] zext_ln215_3_fu_903_p1;
wire   [16:0] sub_ln1354_fu_907_p2;
wire   [16:0] zext_ln879_1_fu_925_p1;
wire   [16:0] add_ln1354_1_fu_919_p2;
wire   [31:0] zext_ln887_fu_935_p1;
wire   [32:0] zext_ln215_4_fu_944_p1;
wire   [32:0] sub_ln1354_1_fu_948_p2;
wire   [0:0] icmp_ln879_2_fu_913_p2;
wire   [0:0] icmp_ln879_3_fu_929_p2;
wire   [0:0] icmp_ln887_3_fu_939_p2;
wire   [0:0] icmp_ln895_2_fu_953_p2;
wire   [0:0] and_ln879_1_fu_965_p2;
wire   [0:0] and_ln879_fu_959_p2;
wire   [0:0] and_ln879_2_fu_971_p2;
wire   [0:0] or_ln138_fu_977_p2;
wire   [0:0] icmp_ln879_1_fu_893_p2;
wire   [15:0] select_ln89_fu_840_p3;
wire   [31:0] r_V_fu_988_p3;
wire   [16:0] ret_V_1_fu_1002_p2;
wire   [16:0] zext_ln879_2_fu_1008_p1;
wire   [31:0] overlap_next_pixel_V_fu_996_p2;
wire   [0:0] icmp_ln879_4_fu_1012_p2;
wire   [0:0] icmp_ln895_3_fu_1018_p2;
wire   [0:0] and_ln166_fu_1024_p2;
wire   [0:0] and_ln218_fu_1044_p2;
wire   [0:0] icmp_ln899_2_fu_1054_p2;
wire   [0:0] icmp_ln879_6_fu_1065_p2;
wire   [15:0] select_ln239_fu_1071_p3;
wire   [0:0] or_ln237_fu_1060_p2;
wire   [16:0] zext_ln239_fu_1079_p1;
wire   [15:0] ouput_index_write_co_fu_1090_p2;
wire   [15:0] select_ln752_fu_1096_p3;
wire   [15:0] write_col_index_V_fu_1135_p2;
wire   [15:0] select_ln819_fu_1141_p3;
wire   [15:0] trunc_ln647_fu_1161_p1;
wire   [16:0] Wy1_V_fu_1165_p1;
wire   [15:0] p_Result_1_fu_1175_p4;
wire   [16:0] Yindex_output_precis_fu_1169_p2;
wire   [0:0] icmp_ln899_fu_1190_p2;
wire   [0:0] select_ln1597_1_fu_1156_p3;
wire   [0:0] or_ln201_1_fu_1196_p2;
wire   [0:0] icmp_ln202_fu_1185_p2;
wire   [0:0] and_ln205_fu_1208_p2;
wire   [0:0] xor_ln899_fu_1217_p2;
wire   [0:0] and_ln205_1_fu_1212_p2;
wire   [0:0] and_ln895_fu_1222_p2;
wire   [0:0] or_ln201_fu_1202_p2;
wire   [0:0] or_ln895_fu_1227_p2;
wire   [0:0] or_ln895_1_fu_1233_p2;
wire   [0:0] and_ln895_1_fu_1239_p2;
wire   [15:0] trunc_ln357_fu_1258_p1;
wire   [16:0] zext_ln214_fu_1261_p1;
wire   [16:0] sub_ln214_fu_1265_p2;
wire   [16:0] Wy0_V_fu_1271_p3;
wire   [7:0] select_ln324_fu_1293_p3;
wire   [23:0] grp_fu_1742_p3;
wire   [15:0] lshr_ln1503_3_fu_1307_p4;
wire   [31:0] grp_fu_1751_p3;
wire   [23:0] mul_ln209_2_fu_1760_p2;
wire   [15:0] lshr_ln1503_5_fu_1333_p4;
wire   [31:0] mul_ln209_3_fu_1767_p2;
wire   [15:0] p_06_fu_1278_p3;
wire   [31:0] grp_fu_1774_p3;
wire   [31:0] mul_ln209_5_fu_1783_p2;
wire   [0:0] out_buffer_wr_en_fu_1250_p2;
wire   [0:0] xor_ln647_fu_1388_p2;
wire   [15:0] PB_out_0_1_V_fu_1346_p4;
wire   [15:0] PB_out_0_0_V_fu_1320_p4;
wire   [15:0] PB_out_overlap_0_1_fu_1368_p4;
wire   [15:0] PB_out_overlap_0_0_fu_1359_p4;
wire   [1:0] p_061_3_0_i_0_1_fu_1398_p3;
wire   [15:0] select_ln468_fu_1419_p3;
wire   [15:0] select_ln647_fu_1405_p3;
wire   [15:0] select_ln468_1_fu_1426_p3;
wire   [15:0] select_ln647_1_fu_1412_p3;
wire   [0:0] icmp_ln883_fu_1433_p2;
wire   [15:0] add_ln209_fu_1439_p2;
wire   [15:0] add_ln209_1_fu_1445_p2;
wire   [0:0] or_ln488_fu_1382_p2;
wire   [0:0] xor_ln488_fu_1377_p2;
wire   [0:0] and_ln488_fu_1467_p2;
wire   [15:0] select_ln883_1_fu_1459_p3;
wire   [0:0] xor_ln647_1_fu_1393_p2;
wire   [15:0] select_ln647_2_fu_1489_p3;
wire   [15:0] select_ln647_3_fu_1496_p3;
wire   [1:0] tmp_1_fu_1503_p3;
wire   [15:0] select_ln468_2_fu_1524_p3;
wire   [15:0] select_ln647_4_fu_1510_p3;
wire   [15:0] select_ln468_3_fu_1531_p3;
wire   [15:0] select_ln647_5_fu_1517_p3;
wire   [0:0] icmp_ln883_1_fu_1538_p2;
wire   [15:0] add_ln209_2_fu_1544_p2;
wire   [15:0] add_ln209_3_fu_1550_p2;
wire   [0:0] and_ln488_1_fu_1572_p2;
wire   [15:0] select_ln883_3_fu_1564_p3;
wire   [0:0] xor_ln528_fu_1593_p2;
wire   [0:0] or_ln528_fu_1599_p2;
wire   [15:0] select_ln528_fu_1605_p3;
wire   [31:0] out_col_index_fu_1632_p2;
wire   [31:0] Yindex_output_V_fu_1650_p2;
wire   [15:0] trunc_ln647_3_fu_1662_p1;
wire   [31:0] ret_V_4_fu_1666_p1;
wire   [32:0] rhs_V_fu_1675_p1;
wire   [32:0] ret_V_3_fu_1679_p2;
wire   [0:0] icmp_ln887_4_fu_1670_p2;
wire   [0:0] and_ln837_fu_1690_p2;
wire   [0:0] icmp_ln895_5_fu_1684_p2;
wire   [15:0] select_ln519_fu_1701_p3;
wire   [15:0] add_ln214_fu_1713_p2;
wire   [15:0] mul_ln750_fu_1738_p0;
wire   [15:0] mul_ln750_fu_1738_p1;
wire   [16:0] grp_fu_1742_p0;
wire   [7:0] grp_fu_1742_p1;
wire   [8:0] grp_fu_1742_p2;
wire   [15:0] grp_fu_1751_p0;
wire   [31:0] zext_ln209_4_fu_1316_p1;
wire   [16:0] grp_fu_1751_p1;
wire   [31:0] zext_ln209_1_fu_1289_p1;
wire   [16:0] grp_fu_1751_p2;
wire   [15:0] mul_ln209_2_fu_1760_p0;
wire   [7:0] mul_ln209_2_fu_1760_p1;
wire   [15:0] mul_ln209_3_fu_1767_p0;
wire   [31:0] zext_ln209_6_fu_1342_p1;
wire   [16:0] mul_ln209_3_fu_1767_p1;
wire   [15:0] grp_fu_1774_p0;
wire   [15:0] grp_fu_1774_p1;
wire   [31:0] zext_ln209_7_fu_1355_p1;
wire   [16:0] grp_fu_1774_p2;
wire   [15:0] mul_ln209_5_fu_1783_p0;
wire   [15:0] mul_ln209_5_fu_1783_p1;
reg    grp_fu_409_ap_start;
wire    grp_fu_409_ap_done;
reg    grp_fu_421_ap_start;
wire    grp_fu_421_ap_done;
reg    grp_fu_437_ap_start;
wire    grp_fu_437_ap_done;
wire    ap_CS_fsm_state44;
reg   [39:0] ap_NS_fsm;
reg    ap_block_pp1;
reg    ap_enable_operation_413;
reg    ap_enable_state41_pp1_iter2_stage0;
reg    ap_enable_operation_442;
reg    ap_enable_state42_pp1_iter3_stage0;
reg    ap_predicate_op445_store_state42;
reg    ap_enable_operation_445;
reg    ap_enable_operation_449;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [23:0] grp_fu_1742_p00;
wire   [23:0] grp_fu_1742_p10;
wire   [31:0] grp_fu_409_p10;
wire   [31:0] grp_fu_421_p10;
wire   [31:0] grp_fu_437_p10;
wire   [23:0] mul_ln209_2_fu_1760_p00;
wire   [23:0] mul_ln209_2_fu_1760_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

xFResizeAreaDownSbkb #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
ouput_buffer_0_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ouput_buffer_0_0_V_address0),
    .ce0(ouput_buffer_0_0_V_ce0),
    .we0(ouput_buffer_0_0_V_we0),
    .d0(16'd0),
    .q0(ouput_buffer_0_0_V_q0),
    .address1(ouput_buffer_0_0_V_address1),
    .ce1(ouput_buffer_0_0_V_ce1),
    .we1(ouput_buffer_0_0_V_we1),
    .d1(ouput_buffer_0_0_V_d1)
);

resize_udiv_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resize_udiv_32ns_cud_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_409_ap_start),
    .done(grp_fu_409_ap_done),
    .din0(grp_fu_409_p0),
    .din1(grp_fu_409_p1),
    .ce(1'b1),
    .dout(grp_fu_409_p2)
);

resize_udiv_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resize_udiv_32ns_cud_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_421_ap_start),
    .done(grp_fu_421_ap_done),
    .din0(grp_fu_421_p0),
    .din1(grp_fu_421_p1),
    .ce(1'b1),
    .dout(grp_fu_421_p2)
);

resize_udiv_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resize_udiv_32ns_cud_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_437_ap_start),
    .done(grp_fu_437_ap_done),
    .din0(grp_fu_437_p0),
    .din1(grp_fu_437_p1),
    .ce(1'b1),
    .dout(grp_fu_437_p2)
);

resize_mul_mul_16dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resize_mul_mul_16dEe_U20(
    .din0(mul_ln750_fu_1738_p0),
    .din1(mul_ln750_fu_1738_p1),
    .dout(mul_ln750_fu_1738_p2)
);

resize_mac_muladdeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
resize_mac_muladdeOg_U21(
    .din0(grp_fu_1742_p0),
    .din1(grp_fu_1742_p1),
    .din2(grp_fu_1742_p2),
    .dout(grp_fu_1742_p3)
);

resize_mac_muladdfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
resize_mac_muladdfYi_U22(
    .din0(grp_fu_1751_p0),
    .din1(grp_fu_1751_p1),
    .din2(grp_fu_1751_p2),
    .dout(grp_fu_1751_p3)
);

resize_mul_mul_16g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
resize_mul_mul_16g8j_U23(
    .din0(mul_ln209_2_fu_1760_p0),
    .din1(mul_ln209_2_fu_1760_p1),
    .dout(mul_ln209_2_fu_1760_p2)
);

resize_mul_mul_16hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
resize_mul_mul_16hbi_U24(
    .din0(mul_ln209_3_fu_1767_p0),
    .din1(mul_ln209_3_fu_1767_p1),
    .dout(mul_ln209_3_fu_1767_p2)
);

resize_mac_muladdibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
resize_mac_muladdibs_U25(
    .din0(grp_fu_1774_p0),
    .din1(grp_fu_1774_p1),
    .din2(grp_fu_1774_p2),
    .dout(grp_fu_1774_p3)
);

resize_mul_mul_16dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resize_mul_mul_16dEe_U26(
    .din0(mul_ln209_5_fu_1783_p0),
    .din1(mul_ln209_5_fu_1783_p1),
    .dout(mul_ln209_5_fu_1783_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state39))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state39)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state39);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        accum_reg_V_0_0_1_reg_303 <= accum_reg_0_0_V_reg_2135;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        accum_reg_V_0_0_1_reg_303 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        accum_reg_V_0_1_1_reg_291 <= accum_reg_0_1_V_reg_2150;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        accum_reg_V_0_1_1_reg_291 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        accum_reg_overlap_V_1_reg_279 <= accum_reg_overlap_0_reg_2140;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        accum_reg_overlap_V_1_reg_279 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        accum_reg_overlap_V_s_reg_267 <= accum_reg_overlap_0_1_reg_2155;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        accum_reg_overlap_V_s_reg_267 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        empty_12_reg_348 <= select_ln750_reg_2102;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        empty_12_reg_348 <= 16'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_fu_561_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_reg_245 <= add_ln686_fu_566_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        indvar_flatten_reg_245 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == DDR_wr_en_fu_1245_p2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        out_col_index_1_fu_162 <= out_col_index_2_fu_1638_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        out_col_index_1_fu_162 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        output_buffer_index_s_reg_372 <= col_index_reg_2011;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_index_s_reg_372 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_fu_561_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        p_Val2_10_reg_325 <= Yindex_output_prev_V_1_fu_668_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_10_reg_325 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        p_Val2_12_reg_336 <= select_ln750_1_reg_2121;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_12_reg_336 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        p_Val2_9_reg_315 <= Yindex_output_V_3_reg_2169;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_9_reg_315 <= out_div_2_reg_1858;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        t2_reg_360 <= and_ln837_1_reg_2174;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        t2_reg_360 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_fu_561_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        t_V_1_reg_256 <= select_ln686_fu_600_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        t_V_1_reg_256 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        t_V_reg_234 <= 9'd0;
    end else if (((icmp_ln887_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        t_V_reg_234 <= dim3_V_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        DDR_wr_en_reg_2126 <= DDR_wr_en_fu_1245_p2;
        select_ln883_2_reg_2145 <= select_ln883_2_fu_1556_p3;
        select_ln883_reg_2130 <= select_ln883_fu_1451_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        DDR_wr_en_reg_2126_pp1_iter3_reg <= DDR_wr_en_reg_2126;
        and_ln218_1_reg_2092_pp1_iter2_reg <= and_ln218_1_reg_2092;
        icmp_ln686_reg_1981_pp1_iter2_reg <= icmp_ln686_reg_1981_pp1_iter1_reg;
        icmp_ln809_reg_2165_pp1_iter3_reg <= icmp_ln809_reg_2165;
        ouput_buffer_0_0_V_2_reg_2115_pp1_iter2_reg <= ouput_buffer_0_0_V_2_reg_2115;
        trunc_ln834_reg_2051_pp1_iter2_reg <= trunc_ln834_reg_2051;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == DDR_wr_en_reg_2126) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        DDR_write_data_V_0_0_1_fu_170 <= {{add_ln214_fu_1713_p2[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Wx_for_Nplus1_Procbl_reg_2081 <= Wx_for_Nplus1_Procbl_fu_1030_p3;
        and_ln218_1_reg_2092 <= and_ln218_1_fu_1049_p2;
        icmp_ln703_reg_2058 <= icmp_ln703_fu_686_p2;
        icmp_ln899_1_reg_2086 <= icmp_ln899_1_fu_1038_p2;
        or_ln138_1_reg_2076 <= or_ln138_1_fu_982_p2;
        ouput_buffer_0_0_V_2_reg_2115 <= zext_ln544_1_fu_1130_p1;
        select_ln237_reg_2097 <= select_ln237_fu_1083_p3;
        trunc_ln214_reg_2066 <= trunc_ln214_fu_781_p1;
        trunc_ln647_2_reg_2107 <= trunc_ln647_2_fu_1126_p1;
        trunc_ln834_reg_2051 <= trunc_ln834_fu_682_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Xindex_output_initia_reg_1875[31 : 1] <= Xindex_output_initia_fu_451_p2[31 : 1];
        out_div_1_reg_1840 <= grp_fu_421_p2;
        out_div_2_reg_1858 <= grp_fu_437_p2;
        out_div_reg_1835 <= grp_fu_409_p2;
        trunc_ln29_1_reg_1869 <= trunc_ln29_1_fu_447_p1;
        trunc_ln29_reg_1852 <= trunc_ln29_fu_443_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Yindex_output_V_3_reg_2169 <= Yindex_output_V_3_fu_1655_p3;
        accum_reg_0_0_V_reg_2135 <= accum_reg_0_0_V_fu_1473_p3;
        accum_reg_0_1_V_reg_2150 <= accum_reg_0_1_V_fu_1577_p3;
        accum_reg_overlap_0_1_reg_2155 <= accum_reg_overlap_0_1_fu_1585_p3;
        accum_reg_overlap_0_reg_2140 <= accum_reg_overlap_0_fu_1481_p3;
        and_ln837_1_reg_2174 <= and_ln837_1_fu_1695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_ln203_reg_1959 <= add_ln203_fu_535_p2;
        add_ln750_reg_1920 <= add_ln750_fu_477_p2;
        icmp_ln879_reg_1936 <= icmp_ln879_fu_499_p2;
        lhs_V_reg_1926[31 : 0] <= lhs_V_fu_483_p1[31 : 0];
        mul_ln750_reg_1971 <= mul_ln750_fu_1738_p2;
        tmp_5_reg_1954 <= and_ln213_fu_520_p2[32'd16];
        xor_ln1054_1_reg_1949 <= xor_ln1054_1_fu_514_p2;
        xor_ln1054_reg_1931 <= xor_ln1054_fu_493_p2;
        xor_ln879_reg_1965 <= xor_ln879_fu_541_p2;
        zext_ln215_1_reg_1944[31 : 0] <= zext_ln215_1_fu_504_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_fu_561_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        col_index_reg_2011 <= col_index_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        height_reg_1790 <= height_fu_383_p1;
        width_reg_1795 <= width_fu_387_p1;
        zext_ln29_1_reg_1813[15 : 0] <= zext_ln29_1_fu_405_p1[15 : 0];
        zext_ln29_2_reg_1829[15 : 0] <= zext_ln29_2_fu_433_p1[15 : 0];
        zext_ln29_reg_1802[15 : 0] <= zext_ln29_fu_395_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_fu_561_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln204_reg_2022 <= icmp_ln204_fu_642_p2;
        icmp_ln218_reg_2037 <= icmp_ln218_fu_653_p2;
        icmp_ln692_reg_1990 <= icmp_ln692_fu_572_p2;
        icmp_ln755_reg_2042 <= icmp_ln755_fu_658_p2;
        icmp_ln879_7_reg_2001 <= icmp_ln879_7_fu_595_p2;
        icmp_ln895_4_reg_2031 <= icmp_ln895_4_fu_647_p2;
        p_Result_2_reg_2017 <= {{p_Val2_10_reg_325[31:16]}};
        select_ln1597_reg_1995 <= select_ln1597_fu_577_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln204_reg_2022_pp1_iter1_reg <= icmp_ln204_reg_2022;
        icmp_ln686_reg_1981 <= icmp_ln686_fu_561_p2;
        icmp_ln686_reg_1981_pp1_iter1_reg <= icmp_ln686_reg_1981;
        icmp_ln692_reg_1990_pp1_iter1_reg <= icmp_ln692_reg_1990;
        icmp_ln879_5_reg_1976 <= icmp_ln879_5_fu_556_p2;
        icmp_ln879_5_reg_1976_pp1_iter1_reg <= icmp_ln879_5_reg_1976;
        icmp_ln879_7_reg_2001_pp1_iter1_reg <= icmp_ln879_7_reg_2001;
        icmp_ln895_4_reg_2031_pp1_iter1_reg <= icmp_ln895_4_reg_2031;
        p_Result_2_reg_2017_pp1_iter1_reg <= p_Result_2_reg_2017;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == DDR_wr_en_fu_1245_p2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln809_reg_2165 <= icmp_ln809_fu_1624_p2;
        select_ln528_1_reg_2160 <= select_ln528_1_fu_1613_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln755_reg_2042 == 1'd1) & (icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_0359_1_fu_166 <= stream_in_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_Val2_1_fu_158 <= Xindex_output_initia_1_fu_696_p3;
        p_Val2_s_fu_154 <= p_Val2_7_fu_708_p3;
        select_ln750_1_reg_2121 <= select_ln750_1_fu_1149_p3;
        select_ln750_reg_2102 <= select_ln750_fu_1104_p3;
    end
end

always @ (*) begin
    if ((icmp_ln686_fu_561_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_accum_reg_V_0_0_1_phi_fu_307_p4 = accum_reg_0_0_V_reg_2135;
    end else begin
        ap_phi_mux_accum_reg_V_0_0_1_phi_fu_307_p4 = accum_reg_V_0_0_1_reg_303;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_accum_reg_V_0_1_1_phi_fu_295_p4 = accum_reg_0_1_V_reg_2150;
    end else begin
        ap_phi_mux_accum_reg_V_0_1_1_phi_fu_295_p4 = accum_reg_V_0_1_1_reg_291;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_accum_reg_overlap_V_1_phi_fu_283_p4 = accum_reg_overlap_0_reg_2140;
    end else begin
        ap_phi_mux_accum_reg_overlap_V_1_phi_fu_283_p4 = accum_reg_overlap_V_1_reg_279;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_accum_reg_overlap_V_s_phi_fu_271_p4 = accum_reg_overlap_0_1_reg_2155;
    end else begin
        ap_phi_mux_accum_reg_overlap_V_s_phi_fu_271_p4 = accum_reg_overlap_V_s_reg_267;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_empty_12_phi_fu_352_p4 = select_ln750_reg_2102;
    end else begin
        ap_phi_mux_empty_12_phi_fu_352_p4 = empty_12_reg_348;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_output_buffer_index_s_phi_fu_376_p4 = col_index_reg_2011;
    end else begin
        ap_phi_mux_output_buffer_index_s_phi_fu_376_p4 = output_buffer_index_s_reg_372;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_p_Val2_12_phi_fu_340_p4 = select_ln750_1_reg_2121;
    end else begin
        ap_phi_mux_p_Val2_12_phi_fu_340_p4 = p_Val2_12_reg_336;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_p_Val2_9_phi_fu_318_p4 = Yindex_output_V_3_reg_2169;
    end else begin
        ap_phi_mux_p_Val2_9_phi_fu_318_p4 = p_Val2_9_reg_315;
    end
end

always @ (*) begin
    if (((icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_t2_phi_fu_364_p4 = and_ln837_1_reg_2174;
    end else begin
        ap_phi_mux_t2_phi_fu_364_p4 = t2_reg_360;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_409_ap_start = 1'b1;
    end else begin
        grp_fu_409_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_421_ap_start = 1'b1;
    end else begin
        grp_fu_421_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_437_ap_start = 1'b1;
    end else begin
        grp_fu_437_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ouput_buffer_0_0_V_address0 = ouput_buffer_0_0_V_2_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        ouput_buffer_0_0_V_address0 = zext_ln544_fu_469_p1;
    end else begin
        ouput_buffer_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        ouput_buffer_0_0_V_ce0 = 1'b1;
    end else begin
        ouput_buffer_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == DDR_wr_en_reg_2126) & (1'd0 == and_ln218_1_reg_2092_pp1_iter2_reg) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'd1 == DDR_wr_en_reg_2126) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        ouput_buffer_0_0_V_ce1 = 1'b1;
    end else begin
        ouput_buffer_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        if ((1'd1 == DDR_wr_en_reg_2126)) begin
            ouput_buffer_0_0_V_d1 = select_ln528_1_reg_2160;
        end else if (((1'd0 == DDR_wr_en_reg_2126) & (1'd0 == and_ln218_1_reg_2092_pp1_iter2_reg))) begin
            ouput_buffer_0_0_V_d1 = add_ln321_fu_1706_p2;
        end else begin
            ouput_buffer_0_0_V_d1 = 'bx;
        end
    end else begin
        ouput_buffer_0_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        ouput_buffer_0_0_V_we0 = 1'b1;
    end else begin
        ouput_buffer_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == DDR_wr_en_reg_2126) & (1'd0 == and_ln218_1_reg_2092_pp1_iter2_reg) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'd1 == DDR_wr_en_reg_2126) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        ouput_buffer_0_0_V_we1 = 1'b1;
    end else begin
        ouput_buffer_0_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == DDR_wr_en_reg_2126_pp1_iter3_reg) & (icmp_ln809_reg_2165_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        resize_out_data_V_blk_n = resize_out_data_V_full_n;
    end else begin
        resize_out_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op453_write_state43 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        resize_out_data_V_write = 1'b1;
    end else begin
        resize_out_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln755_reg_2042 == 1'd1) & (icmp_ln686_reg_1981 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stream_in_data_V_blk_n = stream_in_data_V_empty_n;
    end else begin
        stream_in_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op319_read_state40 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stream_in_data_V_read = 1'b1;
    end else begin
        stream_in_data_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln887_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln686_fu_561_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((icmp_ln686_fu_561_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DDR_wr_en_fu_1245_p2 = (tmp_5_reg_1954 | and_ln895_1_fu_1239_p2);

assign PB_out_0_0_V_fu_1320_p4 = {{grp_fu_1751_p3[31:16]}};

assign PB_out_0_1_V_fu_1346_p4 = {{mul_ln209_3_fu_1767_p2[31:16]}};

assign PB_out_overlap_0_0_fu_1359_p4 = {{grp_fu_1774_p3[31:16]}};

assign PB_out_overlap_0_1_fu_1368_p4 = {{mul_ln209_5_fu_1783_p2[31:16]}};

assign Wx_for_Nplus1_Procbl_fu_1030_p3 = ((and_ln166_fu_1024_p2[0:0] === 1'b1) ? index_fract_value_V_fu_715_p1 : 16'd0);

assign Wy0_V_fu_1271_p3 = ((ap_phi_mux_t2_phi_fu_364_p4[0:0] === 1'b1) ? sub_ln214_fu_1265_p2 : trunc_ln29_1_reg_1869);

assign Wy1_V_fu_1165_p1 = trunc_ln647_fu_1161_p1;

assign Xindex_output_initia_1_fu_696_p3 = ((icmp_ln703_fu_686_p2[0:0] === 1'b1) ? out_div_1_reg_1840 : add_ln700_fu_691_p2);

assign Xindex_output_initia_fu_451_p2 = grp_fu_421_p2 << 32'd1;

assign Yindex_output_V_3_fu_1655_p3 = ((icmp_ln204_reg_2022_pp1_iter1_reg[0:0] === 1'b1) ? Yindex_output_V_fu_1650_p2 : ap_phi_mux_p_Val2_9_phi_fu_318_p4);

assign Yindex_output_V_fu_1650_p2 = (out_div_2_reg_1858 + ap_phi_mux_p_Val2_9_phi_fu_318_p4);

assign Yindex_output_precis_fu_1169_p2 = ($signed(17'd65536) - $signed(Wy1_V_fu_1165_p1));

assign Yindex_output_prev_V_1_fu_668_p3 = ((icmp_ln204_fu_642_p2[0:0] === 1'b1) ? Yindex_output_prev_V_fu_663_p2 : p_Val2_10_reg_325);

assign Yindex_output_prev_V_fu_663_p2 = (out_div_2_reg_1858 + p_Val2_10_reg_325);

assign Yindex_output_prev_p_fu_626_p2 = ($signed(17'd65536) - $signed(zext_ln647_1_fu_622_p1));

assign accum_reg_0_0_V_fu_1473_p3 = ((and_ln488_fu_1467_p2[0:0] === 1'b1) ? 16'd0 : select_ln883_fu_1451_p3);

assign accum_reg_0_1_V_fu_1577_p3 = ((and_ln488_1_fu_1572_p2[0:0] === 1'b1) ? 16'd0 : select_ln883_2_fu_1556_p3);

assign accum_reg_overlap_0_1_fu_1585_p3 = ((and_ln488_1_fu_1572_p2[0:0] === 1'b1) ? 16'd0 : select_ln883_3_fu_1564_p3);

assign accum_reg_overlap_0_fu_1481_p3 = ((and_ln488_fu_1467_p2[0:0] === 1'b1) ? 16'd0 : select_ln883_1_fu_1459_p3);

assign add_ln1354_1_fu_919_p2 = ($signed(17'd131071) + $signed(zext_ln215_2_fu_899_p1));

assign add_ln1354_fu_877_p2 = ($signed(32'd4294967231) + $signed(Xindex_output_initia_1_fu_696_p3));

assign add_ln203_fu_535_p2 = ($signed(17'd131071) + $signed(zext_ln203_fu_532_p1));

assign add_ln209_1_fu_1445_p2 = (select_ln468_1_fu_1426_p3 + select_ln647_1_fu_1412_p3);

assign add_ln209_2_fu_1544_p2 = (select_ln468_2_fu_1524_p3 + select_ln647_4_fu_1510_p3);

assign add_ln209_3_fu_1550_p2 = (select_ln468_3_fu_1531_p3 + select_ln647_5_fu_1517_p3);

assign add_ln209_fu_1439_p2 = (select_ln468_fu_1419_p3 + select_ln647_fu_1405_p3);

assign add_ln214_fu_1713_p2 = (add_ln321_fu_1706_p2 + 16'd128);

assign add_ln321_fu_1706_p2 = (ouput_buffer_0_0_V_q0 + select_ln519_fu_1701_p3);

assign add_ln686_fu_566_p2 = (indvar_flatten_reg_245 + 32'd1);

assign add_ln700_1_fu_703_p2 = (p_Val2_s_fu_154 + out_div_1_reg_1840);

assign add_ln700_3_fu_585_p2 = (16'd1 + t_V_1_reg_256);

assign add_ln700_fu_691_p2 = (p_Val2_1_fu_158 + out_div_1_reg_1840);

assign add_ln750_fu_477_p2 = ($signed(17'd131071) + $signed(zext_ln750_fu_474_p1));

assign and_ln166_fu_1024_p2 = (icmp_ln895_3_fu_1018_p2 & icmp_ln879_4_fu_1012_p2);

assign and_ln205_1_fu_1212_p2 = (icmp_ln899_1_reg_2086 & and_ln205_fu_1208_p2);

assign and_ln205_fu_1208_p2 = (icmp_ln895_4_reg_2031_pp1_iter1_reg & icmp_ln204_reg_2022_pp1_iter1_reg);

assign and_ln213_fu_520_p2 = (trunc_ln29_reg_1852 & trunc_ln29_1_reg_1869);

assign and_ln218_1_fu_1049_p2 = (icmp_ln218_reg_2037 & and_ln218_fu_1044_p2);

assign and_ln218_fu_1044_p2 = (xor_ln1054_1_reg_1949 & icmp_ln899_1_fu_1038_p2);

assign and_ln488_1_fu_1572_p2 = (trunc_ln834_reg_2051 & or_ln488_fu_1382_p2);

assign and_ln488_fu_1467_p2 = (xor_ln488_fu_1377_p2 & or_ln488_fu_1382_p2);

assign and_ln72_1_fu_761_p2 = (icmp_ln887_1_fu_728_p2 & and_ln72_fu_756_p2);

assign and_ln72_fu_756_p2 = (xor_ln879_reg_1965 & icmp_ln895_fu_734_p2);

assign and_ln837_1_fu_1695_p2 = (icmp_ln895_5_fu_1684_p2 & and_ln837_fu_1690_p2);

assign and_ln837_fu_1690_p2 = (xor_ln1054_reg_1931 & icmp_ln887_4_fu_1670_p2);

assign and_ln879_1_fu_965_p2 = (icmp_ln895_2_fu_953_p2 & icmp_ln887_3_fu_939_p2);

assign and_ln879_2_fu_971_p2 = (and_ln879_fu_959_p2 & and_ln879_1_fu_965_p2);

assign and_ln879_fu_959_p2 = (icmp_ln879_3_fu_929_p2 & icmp_ln879_2_fu_913_p2);

assign and_ln895_1_fu_1239_p2 = (or_ln895_fu_1227_p2 & or_ln895_1_fu_1233_p2);

assign and_ln895_fu_1222_p2 = (xor_ln899_fu_1217_p2 & icmp_ln895_4_reg_2031_pp1_iter1_reg);

assign and_ln89_1_fu_834_p2 = (icmp_ln887_2_fu_795_p2 & and_ln89_fu_829_p2);

assign and_ln89_fu_829_p2 = (xor_ln879_reg_1965 & icmp_ln895_1_fu_801_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd39];

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_predicate_op453_write_state43 == 1'b1) & (resize_out_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_predicate_op319_read_state40 == 1'b1) & (stream_in_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_predicate_op453_write_state43 == 1'b1) & (resize_out_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_predicate_op319_read_state40 == 1'b1) & (stream_in_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_predicate_op453_write_state43 == 1'b1) & (resize_out_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_predicate_op319_read_state40 == 1'b1) & (stream_in_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_state39_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp1_stage0_iter1 = ((ap_predicate_op319_read_state40 == 1'b1) & (stream_in_data_V_empty_n == 1'b0));
end

assign ap_block_state41_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_pp1_stage0_iter4 = ((ap_predicate_op453_write_state43 == 1'b1) & (resize_out_data_V_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_413 = (icmp_ln686_reg_1981_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_442 = (icmp_ln686_reg_1981_pp1_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_445 = (ap_predicate_op445_store_state42 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_449 = (1'd1 == DDR_wr_en_reg_2126);
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_enable_state41_pp1_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state42_pp1_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1));
end

always @ (*) begin
    ap_predicate_op319_read_state40 = ((icmp_ln755_reg_2042 == 1'd1) & (icmp_ln686_reg_1981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op445_store_state42 = ((1'd0 == DDR_wr_en_reg_2126) & (1'd0 == and_ln218_1_reg_2092_pp1_iter2_reg));
end

always @ (*) begin
    ap_predicate_op453_write_state43 = ((1'd1 == DDR_wr_en_reg_2126_pp1_iter3_reg) & (icmp_ln809_reg_2165_pp1_iter3_reg == 1'd1));
end

assign col_index_fu_612_p2 = (16'd1 + select_ln1597_fu_577_p3);

assign dim3_V_fu_463_p2 = (t_V_reg_234 + 9'd1);

assign grp_fu_1742_p0 = grp_fu_1742_p00;

assign grp_fu_1742_p00 = select_ln237_reg_2097;

assign grp_fu_1742_p1 = grp_fu_1742_p10;

assign grp_fu_1742_p10 = select_ln324_fu_1293_p3;

assign grp_fu_1742_p2 = 24'd128;

assign grp_fu_1751_p0 = zext_ln209_4_fu_1316_p1;

assign grp_fu_1751_p1 = zext_ln209_1_fu_1289_p1;

assign grp_fu_1751_p2 = 32'd32768;

assign grp_fu_1774_p0 = zext_ln209_4_fu_1316_p1;

assign grp_fu_1774_p1 = zext_ln209_7_fu_1355_p1;

assign grp_fu_1774_p2 = 32'd32768;

assign grp_fu_409_p0 = stream_in_cols_read << 32'd16;

assign grp_fu_409_p1 = grp_fu_409_p10;

assign grp_fu_409_p10 = out_width_fu_391_p1;

assign grp_fu_421_p0 = resize_out_cols_read << 32'd16;

assign grp_fu_421_p1 = grp_fu_421_p10;

assign grp_fu_421_p10 = width_fu_387_p1;

assign grp_fu_437_p0 = resize_out_rows_read << 32'd16;

assign grp_fu_437_p1 = grp_fu_437_p10;

assign grp_fu_437_p10 = height_fu_383_p1;

assign height_fu_383_p1 = stream_in_rows_read[15:0];

assign icmp_ln202_fu_1185_p2 = ((p_Result_1_fu_1175_p4 != p_Result_2_reg_2017_pp1_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_642_p2 = ((add_ln750_reg_1920 == zext_ln834_fu_608_p1) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_653_p2 = ((add_ln750_reg_1920 != zext_ln834_fu_608_p1) ? 1'b1 : 1'b0);

assign icmp_ln686_fu_561_p2 = ((indvar_flatten_reg_245 == mul_ln750_reg_1971) ? 1'b1 : 1'b0);

assign icmp_ln692_fu_572_p2 = ((ap_phi_mux_output_buffer_index_s_phi_fu_376_p4 == width_reg_1795) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_686_p2 = ((select_ln1597_reg_1995 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln755_fu_658_p2 = ((select_ln1597_fu_577_p3 < width_reg_1795) ? 1'b1 : 1'b0);

assign icmp_ln809_fu_1624_p2 = (($signed(out_col_index_1_fu_162) < $signed(zext_ln29_1_reg_1813)) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_893_p2 = ((output_buffer_index_s_14_fu_775_p3 == trunc_ln2_fu_883_p4) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_913_p2 = ((sub_ln1354_fu_907_p2 == 17'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_929_p2 = ((zext_ln879_1_fu_925_p1 == add_ln1354_1_fu_919_p2) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_1012_p2 = ((ret_V_1_fu_1002_p2 == zext_ln879_2_fu_1008_p1) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_556_p2 = ((zext_ln879_fu_552_p1 == add_ln203_reg_1959) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_1065_p2 = ((output_buffer_index_s_14_fu_775_p3 == output_buffer_index_1_fu_740_p4) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_595_p2 = ((zext_ln879_3_fu_591_p1 == add_ln203_reg_1959) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_499_p2 = ((out_div_reg_1835 == 32'd65536) ? 1'b1 : 1'b0);

assign icmp_ln883_1_fu_1538_p2 = ((tmp_1_fu_1503_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_1433_p2 = ((p_061_3_0_i_0_1_fu_1398_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_728_p2 = ((index_fract_value_V_fu_715_p1 < weight_value_V_fu_719_p1) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_795_p2 = ((index_fract_value_V_1_fu_785_p1 < weight_value_V_fu_719_p1) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_939_p2 = ((zext_ln887_fu_935_p1 < out_div_1_reg_1840) ? 1'b1 : 1'b0);

assign icmp_ln887_4_fu_1670_p2 = ((ret_V_4_fu_1666_p1 < out_div_2_reg_1858) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_457_p2 = ((t_V_reg_234 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_801_p2 = ((sub_value_V_1_fu_789_p2 > 16'd65) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_953_p2 = (($signed(sub_ln1354_1_fu_948_p2) > $signed(33'd65)) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_1018_p2 = ((overlap_next_pixel_V_fu_996_p2 > 32'd65) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_647_p2 = ((Yindex_output_prev_p_fu_626_p2 > 17'd65) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_1684_p2 = (($signed(ret_V_3_fu_1679_p2) > $signed(33'd65)) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_734_p2 = ((sub_value_V_fu_722_p2 > 16'd65) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1038_p2 = ((ap_phi_mux_empty_12_phi_fu_352_p4 > select_ln89_fu_840_p3) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1054_p2 = ((index_fract_value_V_fu_715_p1 > weight_value_V_fu_719_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1190_p2 = ((Yindex_output_precis_fu_1169_p2 < 17'd66) ? 1'b1 : 1'b0);

assign index_fract_value_V_1_fu_785_p1 = p_Val2_7_fu_708_p3[15:0];

assign index_fract_value_V_fu_715_p1 = Xindex_output_initia_1_fu_696_p3[15:0];

assign int_bits_Xindex_out_s_fu_859_p4 = {{ret_V_fu_853_p2[31:16]}};

assign lhs_V_fu_483_p1 = out_div_2_reg_1858;

assign lshr_ln1503_3_fu_1307_p4 = {{grp_fu_1742_p3[23:8]}};

assign lshr_ln1503_5_fu_1333_p4 = {{mul_ln209_2_fu_1760_p2[23:8]}};

assign mul_ln209_2_fu_1760_p0 = mul_ln209_2_fu_1760_p00;

assign mul_ln209_2_fu_1760_p00 = Wx_for_Nplus1_Procbl_reg_2081;

assign mul_ln209_2_fu_1760_p1 = mul_ln209_2_fu_1760_p10;

assign mul_ln209_2_fu_1760_p10 = p_0359_1_fu_166;

assign mul_ln209_3_fu_1767_p0 = zext_ln209_6_fu_1342_p1;

assign mul_ln209_3_fu_1767_p1 = zext_ln209_1_fu_1289_p1;

assign mul_ln209_5_fu_1783_p0 = zext_ln209_6_fu_1342_p1;

assign mul_ln209_5_fu_1783_p1 = zext_ln209_7_fu_1355_p1;

assign mul_ln750_fu_1738_p0 = zext_ln29_2_reg_1829;

assign mul_ln750_fu_1738_p1 = zext_ln29_reg_1802;

assign or_ln138_1_fu_982_p2 = (or_ln138_fu_977_p2 | icmp_ln879_1_fu_893_p2);

assign or_ln138_fu_977_p2 = (icmp_ln879_reg_1936 | and_ln879_2_fu_971_p2);

assign or_ln201_1_fu_1196_p2 = (select_ln1597_1_fu_1156_p3 | icmp_ln899_fu_1190_p2);

assign or_ln201_fu_1202_p2 = (or_ln201_1_fu_1196_p2 | icmp_ln202_fu_1185_p2);

assign or_ln237_fu_1060_p2 = (icmp_ln899_2_fu_1054_p2 | icmp_ln879_reg_1936);

assign or_ln488_fu_1382_p2 = (out_buffer_wr_en_fu_1250_p2 | DDR_wr_en_fu_1245_p2);

assign or_ln528_fu_1599_p2 = (xor_ln528_fu_1593_p2 | xor_ln488_fu_1377_p2);

assign or_ln895_1_fu_1233_p2 = (or_ln201_fu_1202_p2 | ap_phi_mux_t2_phi_fu_364_p4);

assign or_ln895_fu_1227_p2 = (and_ln895_fu_1222_p2 | and_ln205_1_fu_1212_p2);

assign ouput_buffer_0_0_V_address1 = ouput_buffer_0_0_V_2_reg_2115_pp1_iter2_reg;

assign ouput_index_write_co_fu_1090_p2 = (16'd1 + ap_phi_mux_empty_12_phi_fu_352_p4);

assign out_buffer_wr_en_fu_1250_p2 = (1'd1 ^ and_ln218_1_reg_2092);

assign out_col_index_2_fu_1638_p3 = ((icmp_ln204_reg_2022_pp1_iter1_reg[0:0] === 1'b1) ? 32'd0 : out_col_index_fu_1632_p2);

assign out_col_index_fu_1632_p2 = (out_col_index_1_fu_162 + 32'd1);

assign out_width_fu_391_p1 = resize_out_cols_read[15:0];

assign output_buffer_index_1_fu_740_p4 = {{Xindex_output_initia_1_fu_696_p3[31:16]}};

assign output_buffer_index_2_fu_750_p2 = ($signed(16'd65535) + $signed(output_buffer_index_1_fu_740_p4));

assign output_buffer_index_3_fu_807_p4 = {{p_Val2_7_fu_708_p3[31:16]}};

assign output_buffer_index_4_fu_817_p2 = ($signed(16'd65535) + $signed(output_buffer_index_3_fu_807_p4));

assign output_buffer_index_s_14_fu_775_p3 = ((icmp_ln879_reg_1936[0:0] === 1'b1) ? select_ln1597_reg_1995 : select_ln72_fu_767_p3);

assign overlap_next_pixel_V_fu_996_p2 = (r_V_fu_988_p3 - Xindex_output_initia_1_fu_696_p3);

assign p_061_3_0_i_0_1_fu_1398_p3 = {{trunc_ln214_reg_2066}, {xor_ln647_fu_1388_p2}};

assign p_06_fu_1278_p3 = ((ap_phi_mux_t2_phi_fu_364_p4[0:0] === 1'b1) ? trunc_ln647_fu_1161_p1 : 16'd0);

assign p_Result_1_fu_1175_p4 = {{ap_phi_mux_p_Val2_9_phi_fu_318_p4[31:16]}};

assign p_Val2_7_fu_708_p3 = ((icmp_ln703_fu_686_p2[0:0] === 1'b1) ? Xindex_output_initia_reg_1875 : add_ln700_1_fu_703_p2);

assign r_V_fu_988_p3 = {{select_ln89_fu_840_p3}, {16'd0}};

assign resize_out_data_V_din = DDR_write_data_V_0_0_1_fu_170;

assign ret_V_1_fu_1002_p2 = (17'd1 + zext_ln879_1_fu_925_p1);

assign ret_V_3_fu_1679_p2 = (lhs_V_reg_1926 - rhs_V_fu_1675_p1);

assign ret_V_4_fu_1666_p1 = trunc_ln647_3_fu_1662_p1;

assign ret_V_fu_853_p2 = ($signed(32'd4294967231) + $signed(sub_ln1354_2_fu_848_p2));

assign rhs_V_fu_1675_p1 = trunc_ln647_3_fu_1662_p1;

assign select_ln1597_1_fu_1156_p3 = ((icmp_ln692_reg_1990_pp1_iter1_reg[0:0] === 1'b1) ? icmp_ln879_7_reg_2001_pp1_iter1_reg : icmp_ln879_5_reg_1976_pp1_iter1_reg);

assign select_ln1597_fu_577_p3 = ((icmp_ln692_fu_572_p2[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_output_buffer_index_s_phi_fu_376_p4);

assign select_ln237_fu_1083_p3 = ((or_ln237_fu_1060_p2[0:0] === 1'b1) ? trunc_ln29_reg_1852 : zext_ln239_fu_1079_p1);

assign select_ln239_fu_1071_p3 = ((icmp_ln879_6_fu_1065_p2[0:0] === 1'b1) ? index_fract_value_V_fu_715_p1 : sub_value_V_fu_722_p2);

assign select_ln324_fu_1293_p3 = ((or_ln138_1_reg_2076[0:0] === 1'b1) ? p_0359_1_fu_166 : 8'd0);

assign select_ln468_1_fu_1426_p3 = ((icmp_ln703_reg_2058[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_accum_reg_overlap_V_1_phi_fu_283_p4);

assign select_ln468_2_fu_1524_p3 = ((icmp_ln703_reg_2058[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_accum_reg_V_0_1_1_phi_fu_295_p4);

assign select_ln468_3_fu_1531_p3 = ((icmp_ln703_reg_2058[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_accum_reg_overlap_V_s_phi_fu_271_p4);

assign select_ln468_fu_1419_p3 = ((icmp_ln703_reg_2058[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_accum_reg_V_0_0_1_phi_fu_307_p4);

assign select_ln519_fu_1701_p3 = ((trunc_ln834_reg_2051_pp1_iter2_reg[0:0] === 1'b1) ? select_ln883_2_reg_2145 : select_ln883_reg_2130);

assign select_ln528_1_fu_1613_p3 = ((or_ln528_fu_1599_p2[0:0] === 1'b1) ? select_ln528_fu_1605_p3 : select_ln883_3_fu_1564_p3);

assign select_ln528_fu_1605_p3 = ((ap_phi_mux_t2_phi_fu_364_p4[0:0] === 1'b1) ? select_ln883_1_fu_1459_p3 : 16'd0);

assign select_ln647_1_fu_1412_p3 = ((trunc_ln214_reg_2066[0:0] === 1'b1) ? PB_out_overlap_0_1_fu_1368_p4 : PB_out_overlap_0_0_fu_1359_p4);

assign select_ln647_2_fu_1489_p3 = ((trunc_ln647_2_reg_2107[0:0] === 1'b1) ? PB_out_0_0_V_fu_1320_p4 : select_ln647_fu_1405_p3);

assign select_ln647_3_fu_1496_p3 = ((trunc_ln647_2_reg_2107[0:0] === 1'b1) ? PB_out_overlap_0_0_fu_1359_p4 : select_ln647_1_fu_1412_p3);

assign select_ln647_4_fu_1510_p3 = ((trunc_ln214_reg_2066[0:0] === 1'b1) ? select_ln647_2_fu_1489_p3 : PB_out_0_1_V_fu_1346_p4);

assign select_ln647_5_fu_1517_p3 = ((trunc_ln214_reg_2066[0:0] === 1'b1) ? select_ln647_3_fu_1496_p3 : PB_out_overlap_0_1_fu_1368_p4);

assign select_ln647_fu_1405_p3 = ((trunc_ln214_reg_2066[0:0] === 1'b1) ? PB_out_0_1_V_fu_1346_p4 : PB_out_0_0_V_fu_1320_p4);

assign select_ln686_fu_600_p3 = ((icmp_ln692_fu_572_p2[0:0] === 1'b1) ? add_ln700_3_fu_585_p2 : t_V_1_reg_256);

assign select_ln703_fu_869_p3 = ((icmp_ln703_fu_686_p2[0:0] === 1'b1) ? 16'd0 : int_bits_Xindex_out_s_fu_859_p4);

assign select_ln72_fu_767_p3 = ((and_ln72_1_fu_761_p2[0:0] === 1'b1) ? output_buffer_index_2_fu_750_p2 : output_buffer_index_1_fu_740_p4);

assign select_ln750_1_fu_1149_p3 = ((icmp_ln204_reg_2022[0:0] === 1'b1) ? 16'd0 : select_ln819_fu_1141_p3);

assign select_ln750_fu_1104_p3 = ((icmp_ln204_reg_2022[0:0] === 1'b1) ? 16'd1 : select_ln752_fu_1096_p3);

assign select_ln752_fu_1096_p3 = ((icmp_ln899_1_fu_1038_p2[0:0] === 1'b1) ? ap_phi_mux_empty_12_phi_fu_352_p4 : ouput_index_write_co_fu_1090_p2);

assign select_ln819_fu_1141_p3 = ((and_ln218_1_fu_1049_p2[0:0] === 1'b1) ? ap_phi_mux_p_Val2_12_phi_fu_340_p4 : write_col_index_V_fu_1135_p2);

assign select_ln879_fu_823_p3 = ((icmp_ln879_reg_1936[0:0] === 1'b1) ? col_index_reg_2011 : output_buffer_index_3_fu_807_p4);

assign select_ln883_1_fu_1459_p3 = ((icmp_ln883_fu_1433_p2[0:0] === 1'b1) ? select_ln468_1_fu_1426_p3 : add_ln209_1_fu_1445_p2);

assign select_ln883_2_fu_1556_p3 = ((icmp_ln883_1_fu_1538_p2[0:0] === 1'b1) ? select_ln468_2_fu_1524_p3 : add_ln209_2_fu_1544_p2);

assign select_ln883_3_fu_1564_p3 = ((icmp_ln883_1_fu_1538_p2[0:0] === 1'b1) ? select_ln468_3_fu_1531_p3 : add_ln209_3_fu_1550_p2);

assign select_ln883_fu_1451_p3 = ((icmp_ln883_fu_1433_p2[0:0] === 1'b1) ? select_ln468_fu_1419_p3 : add_ln209_fu_1439_p2);

assign select_ln89_fu_840_p3 = ((and_ln89_1_fu_834_p2[0:0] === 1'b1) ? output_buffer_index_4_fu_817_p2 : select_ln879_fu_823_p3);

assign sub_ln1354_1_fu_948_p2 = (zext_ln215_1_reg_1944 - zext_ln215_4_fu_944_p1);

assign sub_ln1354_2_fu_848_p2 = (Xindex_output_initia_1_fu_696_p3 - out_div_1_reg_1840);

assign sub_ln1354_fu_907_p2 = (zext_ln215_2_fu_899_p1 - zext_ln215_3_fu_903_p1);

assign sub_ln214_fu_1265_p2 = (zext_ln214_fu_1261_p1 - Wy1_V_fu_1165_p1);

assign sub_value_V_1_fu_789_p2 = (weight_value_V_fu_719_p1 - index_fract_value_V_1_fu_785_p1);

assign sub_value_V_fu_722_p2 = (weight_value_V_fu_719_p1 - index_fract_value_V_fu_715_p1);

assign tmp_1_fu_1503_p3 = {{xor_ln647_1_fu_1393_p2}, {trunc_ln647_2_reg_2107}};

assign tmp_2_fu_486_p3 = out_div_2_reg_1858[32'd16];

assign tmp_4_fu_507_p3 = out_div_1_reg_1840[32'd16];

assign trunc_ln214_fu_781_p1 = output_buffer_index_s_14_fu_775_p3[0:0];

assign trunc_ln29_1_fu_447_p1 = grp_fu_437_p2[16:0];

assign trunc_ln29_fu_443_p1 = grp_fu_421_p2[16:0];

assign trunc_ln2_fu_883_p4 = {{add_ln1354_fu_877_p2[31:16]}};

assign trunc_ln357_fu_1258_p1 = out_div_2_reg_1858[15:0];

assign trunc_ln647_1_fu_618_p1 = p_Val2_10_reg_325[15:0];

assign trunc_ln647_2_fu_1126_p1 = output_buffer_index_s_14_fu_775_p3[0:0];

assign trunc_ln647_3_fu_1662_p1 = Yindex_output_V_3_fu_1655_p3[15:0];

assign trunc_ln647_fu_1161_p1 = ap_phi_mux_p_Val2_9_phi_fu_318_p4[15:0];

assign trunc_ln834_fu_682_p1 = ap_phi_mux_p_Val2_12_phi_fu_340_p4[0:0];

assign weight_value_V_fu_719_p1 = out_div_1_reg_1840[15:0];

assign width_fu_387_p1 = stream_in_cols_read[15:0];

assign write_col_index_V_fu_1135_p2 = (16'd1 + ap_phi_mux_p_Val2_12_phi_fu_340_p4);

assign xor_ln1054_1_fu_514_p2 = (tmp_4_fu_507_p3 ^ 1'd1);

assign xor_ln1054_fu_493_p2 = (tmp_2_fu_486_p3 ^ 1'd1);

assign xor_ln488_fu_1377_p2 = (trunc_ln834_reg_2051 ^ 1'd1);

assign xor_ln528_fu_1593_p2 = (ap_phi_mux_t2_phi_fu_364_p4 ^ 1'd1);

assign xor_ln647_1_fu_1393_p2 = (trunc_ln214_reg_2066 ^ 1'd1);

assign xor_ln647_fu_1388_p2 = (trunc_ln647_2_reg_2107 ^ 1'd1);

assign xor_ln879_fu_541_p2 = (icmp_ln879_fu_499_p2 ^ 1'd1);

assign xor_ln899_fu_1217_p2 = (icmp_ln899_1_reg_2086 ^ 1'd1);

assign zext_ln203_fu_532_p1 = height_reg_1790;

assign zext_ln209_1_fu_1289_p1 = Wy0_V_fu_1271_p3;

assign zext_ln209_4_fu_1316_p1 = lshr_ln1503_3_fu_1307_p4;

assign zext_ln209_6_fu_1342_p1 = lshr_ln1503_5_fu_1333_p4;

assign zext_ln209_7_fu_1355_p1 = p_06_fu_1278_p3;

assign zext_ln214_fu_1261_p1 = trunc_ln357_fu_1258_p1;

assign zext_ln215_1_fu_504_p1 = out_div_1_reg_1840;

assign zext_ln215_2_fu_899_p1 = trunc_ln2_fu_883_p4;

assign zext_ln215_3_fu_903_p1 = select_ln703_fu_869_p3;

assign zext_ln215_4_fu_944_p1 = index_fract_value_V_fu_715_p1;

assign zext_ln239_fu_1079_p1 = select_ln239_fu_1071_p3;

assign zext_ln29_1_fu_405_p1 = out_width_fu_391_p1;

assign zext_ln29_2_fu_433_p1 = height_fu_383_p1;

assign zext_ln29_fu_395_p1 = width_fu_387_p1;

assign zext_ln544_1_fu_1130_p1 = ap_phi_mux_p_Val2_12_phi_fu_340_p4;

assign zext_ln544_fu_469_p1 = t_V_reg_234;

assign zext_ln647_1_fu_622_p1 = trunc_ln647_1_fu_618_p1;

assign zext_ln750_fu_474_p1 = width_reg_1795;

assign zext_ln834_fu_608_p1 = select_ln1597_fu_577_p3;

assign zext_ln879_1_fu_925_p1 = output_buffer_index_s_14_fu_775_p3;

assign zext_ln879_2_fu_1008_p1 = select_ln89_fu_840_p3;

assign zext_ln879_3_fu_591_p1 = add_ln700_3_fu_585_p2;

assign zext_ln879_fu_552_p1 = t_V_1_reg_256;

assign zext_ln887_fu_935_p1 = index_fract_value_V_fu_715_p1;

always @ (posedge ap_clk) begin
    zext_ln29_reg_1802[31:16] <= 16'b0000000000000000;
    zext_ln29_1_reg_1813[31:16] <= 16'b0000000000000000;
    zext_ln29_2_reg_1829[31:16] <= 16'b0000000000000000;
    Xindex_output_initia_reg_1875[0] <= 1'b0;
    lhs_V_reg_1926[32] <= 1'b0;
    zext_ln215_1_reg_1944[32] <= 1'b0;
end

endmodule //xFResizeAreaDownScal
