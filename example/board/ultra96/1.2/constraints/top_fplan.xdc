
####################################################################################
# Generated by Vivado 2014.2 built on 'Wed Jun 11 13:33:10 MDT 2014' by 'xbuild'
# Command Used: write_xdc ./constraints/top_fplan.xdc -force
####################################################################################


####################################################################################
# Constraints from file : 'system_rst_processing_system7_0_100M_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------




####################################################################################
# Constraints from file : 'system_processing_system7_0_0.xdc'
####################################################################################

############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
############################################################################
##  File name :       ps7_constraints.xdc
##
##  Details :     Constraints file
##                    FPGA family:       zynq
##                    FPGA:              xc7z020clg484-1
##                    Device Size:        xc7z020
##                    Package:            clg484
##                    Speedgrade:         -1
##
##
############################################################################
############################################################################
############################################################################
# Clock constraints                                                        #
############################################################################
current_instance system_i/processing_system7_0/inst
create_clock -period 10.000 -name clk_fpga_0 [get_pins {PS7_i/FCLKCLK[0]}]
set_input_jitter clk_fpga_0 0.300
#The clocks are asynchronous, user should constrain them appropriately.#


############################################################################
# I/O STANDARDS and Location Constraints                                   #
############################################################################

#  Enet 0 / mdio / MIO[53]
current_instance -quiet
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[53]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[53]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[53]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[53]}]
#  Enet 0 / mdc / MIO[52]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[52]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[52]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[52]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[52]}]
#  GPIO / gpio[51] / MIO[51]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[51]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[51]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[51]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[51]}]
#  GPIO / gpio[50] / MIO[50]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[50]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[50]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[50]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[50]}]
#  UART 1 / rx / MIO[49]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[49]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[49]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[49]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[49]}]
#  UART 1 / tx / MIO[48]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[48]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[48]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[48]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[48]}]
#  SD 0 / cd / MIO[47]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[47]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[47]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[47]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[47]}]
#  SD 0 / wp / MIO[46]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[46]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[46]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[46]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[46]}]
#  SD 0 / data[3] / MIO[45]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[45]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[45]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[45]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[45]}]
#  SD 0 / data[2] / MIO[44]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[44]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[44]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[44]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[44]}]
#  SD 0 / data[1] / MIO[43]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[43]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[43]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[43]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[43]}]
#  SD 0 / data[0] / MIO[42]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[42]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[42]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[42]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[42]}]
#  SD 0 / cmd / MIO[41]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[41]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[41]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[41]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[41]}]
#  SD 0 / clk / MIO[40]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[40]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[40]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[40]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[40]}]
#  USB 0 / data[7] / MIO[39]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[39]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[39]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[39]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[39]}]
#  USB 0 / data[6] / MIO[38]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[38]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[38]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[38]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[38]}]
#  USB 0 / data[5] / MIO[37]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[37]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[37]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[37]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[37]}]
#  USB 0 / clk / MIO[36]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[36]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[36]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[36]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[36]}]
#  USB 0 / data[3] / MIO[35]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[35]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[35]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[35]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[35]}]
#  USB 0 / data[2] / MIO[34]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[34]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[34]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[34]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[34]}]
#  USB 0 / data[1] / MIO[33]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[33]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[33]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[33]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[33]}]
#  USB 0 / data[0] / MIO[32]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[32]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[32]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[32]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[32]}]
#  USB 0 / nxt / MIO[31]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[31]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[31]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[31]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[31]}]
#  USB 0 / stp / MIO[30]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[30]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[30]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[30]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[30]}]
#  USB 0 / dir / MIO[29]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[29]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[29]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[29]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[29]}]
#  USB 0 / data[4] / MIO[28]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[28]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[28]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[28]}]
#  Enet 0 / rx_ctl / MIO[27]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[27]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[27]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[27]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[27]}]
#  Enet 0 / rxd[3] / MIO[26]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[26]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[26]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[26]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[26]}]
#  Enet 0 / rxd[2] / MIO[25]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[25]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[25]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[25]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[25]}]
#  Enet 0 / rxd[1] / MIO[24]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[24]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[24]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[24]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[24]}]
#  Enet 0 / rxd[0] / MIO[23]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[23]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[23]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[23]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[23]}]
#  Enet 0 / rx_clk / MIO[22]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[22]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[22]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[22]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[22]}]
#  Enet 0 / tx_ctl / MIO[21]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[21]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[21]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[21]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[21]}]
#  Enet 0 / txd[3] / MIO[20]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[20]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[20]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[20]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[20]}]
#  Enet 0 / txd[2] / MIO[19]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[19]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[19]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[19]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[19]}]
#  Enet 0 / txd[1] / MIO[18]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[18]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[18]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[18]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[18]}]
#  Enet 0 / txd[0] / MIO[17]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[17]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[17]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[17]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[17]}]
#  Enet 0 / tx_clk / MIO[16]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[16]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[16]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[16]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[16]}]
#  GPIO / gpio[15] / MIO[15]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[15]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[15]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[15]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[15]}]
#  GPIO / gpio[14] / MIO[14]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[14]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[14]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[14]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[14]}]
#  GPIO / gpio[13] / MIO[13]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[13]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[13]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[13]}]
#  GPIO / gpio[12] / MIO[12]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[12]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[12]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[12]}]
#  GPIO / gpio[11] / MIO[11]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[11]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[11]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[11]}]
#  GPIO / gpio[10] / MIO[10]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[10]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[10]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[10]}]
#  GPIO / gpio[9] / MIO[9]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[9]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[9]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[9]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[9]}]
#  Quad SPI Flash / qspi_fbclk / MIO[8]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[8]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[8]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[8]}]
#  GPIO / gpio[7] / MIO[7]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[7]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[7]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[7]}]
#  Quad SPI Flash / qspi0_sclk / MIO[6]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[6]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[6]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[6]}]
#  Quad SPI Flash / qspi0_io[3] / MIO[5]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[5]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[5]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[5]}]
#  Quad SPI Flash / qspi0_io[2] / MIO[4]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[4]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[4]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[4]}]
#  Quad SPI Flash / qspi0_io[1] / MIO[3]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[3]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[3]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[3]}]
#  Quad SPI Flash / qspi0_io[0] / MIO[2]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[2]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[2]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[2]}]
#  Quad SPI Flash / qspi0_ss_b / MIO[1]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[1]}]
set_property SLEW FAST [get_ports {FIXED_IO_mio[1]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[1]}]
#  GPIO / gpio[0] / MIO[0]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[0]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[0]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrp]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrp]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrp]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrn]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrn]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrn]
set_property IOSTANDARD SSTL15 [get_ports DDR_we_n]
set_property SLEW SLOW [get_ports DDR_we_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_we_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_ras_n]
set_property SLEW SLOW [get_ports DDR_ras_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_ras_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_odt]
set_property SLEW SLOW [get_ports DDR_odt]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_odt]
set_property IOSTANDARD SSTL15 [get_ports DDR_reset_n]
set_property SLEW FAST [get_ports DDR_reset_n]
set_property PIO_DIRECTION BIDIR [get_ports DDR_reset_n]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[0]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[9]}]
set_property SLEW FAST [get_ports {DDR_dq[9]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[9]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[8]}]
set_property SLEW FAST [get_ports {DDR_dq[8]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[8]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[7]}]
set_property SLEW FAST [get_ports {DDR_dq[7]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[7]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[6]}]
set_property SLEW FAST [get_ports {DDR_dq[6]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[6]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[5]}]
set_property SLEW FAST [get_ports {DDR_dq[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[5]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[4]}]
set_property SLEW FAST [get_ports {DDR_dq[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[4]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[3]}]
set_property SLEW FAST [get_ports {DDR_dq[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[31]}]
set_property SLEW FAST [get_ports {DDR_dq[31]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[31]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[30]}]
set_property SLEW FAST [get_ports {DDR_dq[30]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[30]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[2]}]
set_property SLEW FAST [get_ports {DDR_dq[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[29]}]
set_property SLEW FAST [get_ports {DDR_dq[29]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[29]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[28]}]
set_property SLEW FAST [get_ports {DDR_dq[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[28]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[27]}]
set_property SLEW FAST [get_ports {DDR_dq[27]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[27]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[26]}]
set_property SLEW FAST [get_ports {DDR_dq[26]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[26]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[25]}]
set_property SLEW FAST [get_ports {DDR_dq[25]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[25]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[24]}]
set_property SLEW FAST [get_ports {DDR_dq[24]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[24]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[23]}]
set_property SLEW FAST [get_ports {DDR_dq[23]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[23]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[22]}]
set_property SLEW FAST [get_ports {DDR_dq[22]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[22]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[21]}]
set_property SLEW FAST [get_ports {DDR_dq[21]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[21]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[20]}]
set_property SLEW FAST [get_ports {DDR_dq[20]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[20]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[1]}]
set_property SLEW FAST [get_ports {DDR_dq[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[19]}]
set_property SLEW FAST [get_ports {DDR_dq[19]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[19]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[18]}]
set_property SLEW FAST [get_ports {DDR_dq[18]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[18]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[17]}]
set_property SLEW FAST [get_ports {DDR_dq[17]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[17]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[16]}]
set_property SLEW FAST [get_ports {DDR_dq[16]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[16]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[15]}]
set_property SLEW FAST [get_ports {DDR_dq[15]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[15]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[14]}]
set_property SLEW FAST [get_ports {DDR_dq[14]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[14]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[13]}]
set_property SLEW FAST [get_ports {DDR_dq[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[13]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[12]}]
set_property SLEW FAST [get_ports {DDR_dq[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[12]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[11]}]
set_property SLEW FAST [get_ports {DDR_dq[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[11]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[10]}]
set_property SLEW FAST [get_ports {DDR_dq[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[10]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[0]}]
set_property SLEW FAST [get_ports {DDR_dq[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[3]}]
set_property SLEW FAST [get_ports {DDR_dm[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[2]}]
set_property SLEW FAST [get_ports {DDR_dm[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[1]}]
set_property SLEW FAST [get_ports {DDR_dm[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[0]}]
set_property SLEW FAST [get_ports {DDR_dm[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[0]}]
set_property IOSTANDARD SSTL15 [get_ports DDR_cs_n]
set_property SLEW SLOW [get_ports DDR_cs_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cs_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cke]
set_property SLEW SLOW [get_ports DDR_cke]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cke]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_p]
set_property SLEW FAST [get_ports DDR_ck_p]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_p]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_n]
set_property SLEW FAST [get_ports DDR_ck_n]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cas_n]
set_property SLEW SLOW [get_ports DDR_cas_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cas_n]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[2]}]
set_property SLEW SLOW [get_ports {DDR_ba[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[1]}]
set_property SLEW SLOW [get_ports {DDR_ba[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[0]}]
set_property SLEW SLOW [get_ports {DDR_ba[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[9]}]
set_property SLEW SLOW [get_ports {DDR_addr[9]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[9]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[8]}]
set_property SLEW SLOW [get_ports {DDR_addr[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[8]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[7]}]
set_property SLEW SLOW [get_ports {DDR_addr[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[7]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[6]}]
set_property SLEW SLOW [get_ports {DDR_addr[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[6]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[5]}]
set_property SLEW SLOW [get_ports {DDR_addr[5]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[5]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[4]}]
set_property SLEW SLOW [get_ports {DDR_addr[4]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[4]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[3]}]
set_property SLEW SLOW [get_ports {DDR_addr[3]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[3]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[2]}]
set_property SLEW SLOW [get_ports {DDR_addr[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[1]}]
set_property SLEW SLOW [get_ports {DDR_addr[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[14]}]
set_property SLEW SLOW [get_ports {DDR_addr[14]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[14]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[13]}]
set_property SLEW SLOW [get_ports {DDR_addr[13]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[13]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[12]}]
set_property SLEW SLOW [get_ports {DDR_addr[12]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[12]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[11]}]
set_property SLEW SLOW [get_ports {DDR_addr[11]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[11]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[10]}]
set_property SLEW SLOW [get_ports {DDR_addr[10]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[10]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[0]}]
set_property SLEW SLOW [get_ports {DDR_addr[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports FIXED_IO_ps_porb]
set_property SLEW SLOW [get_ports FIXED_IO_ps_porb]
set_property DRIVE 8 [get_ports FIXED_IO_ps_porb]
set_property IOSTANDARD LVCMOS33 [get_ports FIXED_IO_ps_srstb]
set_property SLEW SLOW [get_ports FIXED_IO_ps_srstb]
set_property DRIVE 8 [get_ports FIXED_IO_ps_srstb]
set_property IOSTANDARD LVCMOS33 [get_ports FIXED_IO_ps_clk]
set_property PACKAGE_PIN F7 [get_ports FIXED_IO_ps_clk]
set_property SLEW SLOW [get_ports FIXED_IO_ps_clk]
set_property DRIVE 8 [get_ports FIXED_IO_ps_clk]



####################################################################################
# Constraints from file : 'system_rst_processing_system7_0_100M_0.xdc'
####################################################################################


# file: system_rst_processing_system7_0_100M_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
# design_1_i/proc_sys_reset_1/U0/EXT_LPF/ACTIVE_HIGH_EXT.exr_d1_reg_srl1/D

#
#      set_false_path -through [get_nets *ext_reset_in]
#     #set_false_path -through [get_pins ext_reset_in]
#

set_false_path -through [get_pins system_i/rst_processing_system7_0_100M/ext_reset_in]


####################################################################################
# Constraints from file : 'zycap_axi_dma_0_0.xdc'
####################################################################################

# file: zycap_axi_dma_0_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


####################################################################################
# Constraints from file : 'zycap_ooc.xdc'
####################################################################################

################################################################################

# This XDC is used only for OOC mode of synthesis, implementation
# This constraints file contains default clock frequencies to be used during
# out-of-context flows such as OOC Synthesis and Hierarchical Designs.
# This constraints file is not used in normal top-down synthesis (default flow
# of Vivado)
################################################################################
#create_clock -name clock_name -period 10 [get_ports clock_name]
################################################################################
create_clock -period 10.000 -name s_axi_lite_aclk [get_pins system_i/zycap_0/inst/s_axi_lite_aclk]

################################################################################



####################################################################################
# Constraints from file : 'zycap_axi_dma_0_0_clocks.xdc'
####################################################################################

# file: zycap_axi_dma_0_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
# Design is synchronous. No constraints needed in this mode.



####################################################################################
# Constraints from file : 'system_auto_us_0_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "system_auto_us_0"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)



####################################################################################
# Constraints from file : 'top_io.xdc'
####################################################################################

#LEDs
#LEDs
set_property PACKAGE_PIN T22 [get_ports {leds[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[0]}]
#NET leds0           LOC = T22  | IOSTANDARD=LVCMOS33;  # "leds0"
#NET leds0           LOC = T22  | IOSTANDARD=LVCMOS33;  # "leds0"
set_property PACKAGE_PIN T21 [get_ports {leds[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[1]}]
#NET leds1           LOC = T21  | IOSTANDARD=LVCMOS33;  # "leds1"
#NET leds1           LOC = T21  | IOSTANDARD=LVCMOS33;  # "leds1"
set_property PACKAGE_PIN U22 [get_ports {leds[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[2]}]
#NET leds2           LOC = U22  | IOSTANDARD=LVCMOS33;  # "leds2"
#NET leds2           LOC = U22  | IOSTANDARD=LVCMOS33;  # "leds2"
set_property PACKAGE_PIN U21 [get_ports {leds[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[3]}]
#NET leds3           LOC = U21  | IOSTANDARD=LVCMOS33;  # "leds3"
#NET leds3           LOC = U21  | IOSTANDARD=LVCMOS33;  # "leds3"
set_property PACKAGE_PIN V22 [get_ports {leds[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[4]}]
#NET leds4           LOC = V22  | IOSTANDARD=LVCMOS33;  # "leds4"
#NET leds4           LOC = V22  | IOSTANDARD=LVCMOS33;  # "leds4"
set_property PACKAGE_PIN W22 [get_ports {leds[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[5]}]
#NET leds5           LOC = W22  | IOSTANDARD=LVCMOS33;  # "leds5"
#NET leds5           LOC = W22  | IOSTANDARD=LVCMOS33;  # "leds5"
set_property PACKAGE_PIN U19 [get_ports {leds[6]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[6]}]
#NET leds6           LOC = U19  | IOSTANDARD=LVCMOS33;  # "leds6"
#NET leds6           LOC = U19  | IOSTANDARD=LVCMOS33;  # "leds6"
set_property PACKAGE_PIN U14 [get_ports {leds[7]}]
set_property IOSTANDARD LVCMOS33 [get_ports {leds[7]}]
#NET leds7           LOC = U14  | IOSTANDARD=LVCMOS33;  # "leds7"
#NET leds7           LOC = U14  | IOSTANDARD=LVCMOS33;  # "leds7"


# GPIO pin to reset the USB OTG PHY

# USB-Reset
set_property PACKAGE_PIN G17 [get_ports {gpio_0_tri_io[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[0]}]
#NET "PS_GPIO[0]" LOC = G17;
#NET "PS_GPIO[0]" IOSTANDARD = LVCMOS33;

# On-board OLED
# OLED-VBAT
set_property PACKAGE_PIN U11 [get_ports {gpio_0_tri_io[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[1]}]
#NET "PS_GPIO[1]" LOC = U11;
#NET "PS_GPIO[1]" IOSTANDARD = LVCMOS33;

# OLED-VDD
set_property PACKAGE_PIN U12 [get_ports {gpio_0_tri_io[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[2]}]
#NET "PS_GPIO[2]" LOC = U12;
#NET "PS_GPIO[2]" IOSTANDARD = LVCMOS33;

# OLED-RES
set_property PACKAGE_PIN U9 [get_ports {gpio_0_tri_io[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[3]}]
#NET "PS_GPIO[3]" LOC = U9;
#NET "PS_GPIO[3]" IOSTANDARD = LVCMOS33;

# OLED-DC
set_property PACKAGE_PIN U10 [get_ports {gpio_0_tri_io[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[4]}]
#NET "PS_GPIO[4]" LOC = U10;
#NET "PS_GPIO[4]" IOSTANDARD = LVCMOS33;

# OLED-SCLK
set_property PACKAGE_PIN AB12 [get_ports {gpio_0_tri_io[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[5]}]
#NET "PS_GPIO[5]" LOC = AB12;
#NET "PS_GPIO[5]" IOSTANDARD = LVCMOS33;

# OLED-SDIN
set_property PACKAGE_PIN AA12 [get_ports {gpio_0_tri_io[6]}]
set_property IOSTANDARD LVCMOS33 [get_ports {gpio_0_tri_io[6]}]
#NET "PS_GPIO[6]" LOC = AA12;
#NET "PS_GPIO[6]" IOSTANDARD = LVCMOS33;


# User Generated miscellaneous constraints 

set_property HD.RECONFIGURABLE true [get_cells system_i/partial_led_test_0]

# User Generated physical constraints 

create_pblock pblock_partial_led_test_0
add_cells_to_pblock [get_pblocks pblock_partial_led_test_0] [get_cells -quiet [list system_i/partial_led_test_0]]
resize_pblock [get_pblocks pblock_partial_led_test_0] -add {SLICE_X36Y75:SLICE_X47Y99}
