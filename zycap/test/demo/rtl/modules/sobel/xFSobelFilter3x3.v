// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFSobelFilter3x3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_mat_data_V_dout,
        p_src_mat_data_V_empty_n,
        p_src_mat_data_V_read,
        p_dst_matx_data_V_din,
        p_dst_matx_data_V_full_n,
        p_dst_matx_data_V_write,
        p_dst_maty_data_V_din,
        p_dst_maty_data_V_full_n,
        p_dst_maty_data_V_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_mat_data_V_dout;
input   p_src_mat_data_V_empty_n;
output   p_src_mat_data_V_read;
output  [7:0] p_dst_matx_data_V_din;
input   p_dst_matx_data_V_full_n;
output   p_dst_matx_data_V_write;
output  [7:0] p_dst_maty_data_V_din;
input   p_dst_maty_data_V_full_n;
output   p_dst_maty_data_V_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_mat_data_V_read;
reg[7:0] p_dst_matx_data_V_din;
reg p_dst_matx_data_V_write;
reg[7:0] p_dst_maty_data_V_din;
reg p_dst_maty_data_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln341_reg_776;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln887_2_reg_845;
reg   [0:0] icmp_ln887_1_reg_837;
reg    p_dst_matx_data_V_blk_n;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln887_2_reg_845_pp1_iter2_reg;
reg   [0:0] icmp_ln879_3_reg_861;
reg   [0:0] icmp_ln879_3_reg_861_pp1_iter2_reg;
wire    ap_CS_fsm_state10;
reg    p_dst_maty_data_V_blk_n;
reg   [15:0] index_assign_reg_296;
reg   [12:0] t_V_reg_307;
reg   [12:0] t_V_3_reg_342;
reg   [7:0] src_buf3_V_0_0_reg_354;
reg   [7:0] src_buf2_0_V_reg_366;
reg   [7:0] src_buf2_V_0_0_reg_378;
reg   [7:0] src_buf3_0_V_reg_391;
reg   [7:0] src_buf1_0_V_reg_404;
reg   [7:0] src_buf1_V_0_0_reg_416;
wire   [0:0] icmp_ln341_fu_480_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [15:0] read_index_fu_485_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln544_fu_491_p1;
reg   [63:0] zext_ln544_reg_785;
wire   [12:0] col_V_fu_496_p2;
wire   [16:0] add_ln353_fu_505_p2;
reg   [16:0] add_ln353_reg_813;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln887_fu_515_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] select_ln879_fu_597_p3;
reg   [1:0] select_ln879_reg_822;
wire   [1:0] select_ln879_2_fu_613_p3;
reg   [1:0] select_ln879_2_reg_827;
wire   [1:0] select_ln879_4_fu_629_p3;
reg   [1:0] select_ln879_4_reg_832;
wire   [0:0] icmp_ln887_1_fu_637_p2;
wire   [1:0] trunc_ln321_fu_642_p1;
reg   [1:0] trunc_ln321_reg_841;
wire   [0:0] icmp_ln887_2_fu_665_p2;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op100_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_predicate_op138_write_state9;
reg    ap_predicate_op139_write_state9;
reg    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln887_2_reg_845_pp1_iter1_reg;
wire   [12:0] col_V_1_fu_670_p2;
reg   [12:0] col_V_1_reg_849;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln544_1_fu_676_p1;
reg   [63:0] zext_ln544_1_reg_854;
wire   [0:0] icmp_ln879_3_fu_686_p2;
wire   [7:0] buf0_V_fu_692_p5;
wire   [7:0] buf1_V_fu_704_p5;
wire   [7:0] buf2_V_fu_716_p5;
wire   [12:0] select_ln426_fu_750_p3;
reg    ap_block_state10;
wire   [12:0] row_V_fu_758_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    call_ret_xFSobel3x3_fu_429_ap_ready;
wire   [7:0] call_ret_xFSobel3x3_fu_429_ap_return_0;
wire   [7:0] call_ret_xFSobel3x3_fu_429_ap_return_1;
wire    GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446_ap_ready;
wire   [7:0] GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446_ap_return;
wire    GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463_ap_ready;
wire   [7:0] GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463_ap_return;
reg   [12:0] t_V_1_reg_318;
reg   [12:0] t_V_2_reg_330;
reg   [12:0] ap_phi_mux_t_V_3_phi_fu_346_p4;
wire   [10:0] buf_0_V_addr_1_gep_fu_252_p3;
wire   [10:0] buf_1_V_addr_1_gep_fu_258_p3;
wire   [10:0] buf_2_V_addr_gep_fu_264_p3;
reg   [1:0] p_01400_0_fu_142;
reg   [1:0] p_01396_0_fu_146;
reg   [1:0] p_01392_0_fu_150;
reg    ap_block_pp1_stage0_01001;
wire   [16:0] zext_ln353_fu_502_p1;
wire   [16:0] zext_ln887_1_fu_511_p1;
wire   [0:0] icmp_ln879_2_fu_545_p2;
wire   [0:0] icmp_ln879_fu_533_p2;
wire   [0:0] icmp_ln879_1_fu_539_p2;
wire   [0:0] xor_ln879_fu_575_p2;
wire   [0:0] and_ln879_fu_581_p2;
wire   [0:0] or_ln879_fu_591_p2;
wire   [1:0] zext_ln879_fu_587_p1;
wire   [1:0] select_ln366_fu_551_p3;
wire   [1:0] select_ln879_1_fu_605_p3;
wire   [1:0] select_ln366_1_fu_559_p3;
wire   [1:0] select_ln879_3_fu_621_p3;
wire   [1:0] select_ln366_2_fu_567_p3;
wire   [15:0] zext_ln887_fu_529_p1;
wire   [15:0] zext_ln887_2_fu_661_p1;
wire   [12:0] row_ind_V_fu_738_p2;
wire   [0:0] icmp_ln879_4_fu_744_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_617;
reg    ap_condition_621;
reg    ap_condition_326;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

xFSobel3x3 call_ret_xFSobel3x3_fu_429(
    .ap_ready(call_ret_xFSobel3x3_fu_429_ap_ready),
    .src_buf1_0_V_read(src_buf1_V_0_0_reg_416),
    .src_buf1_1_V_read(src_buf1_0_V_reg_404),
    .src_buf1_2_V_read(buf0_V_fu_692_p5),
    .src_buf2_0_V_read(src_buf2_V_0_0_reg_378),
    .src_buf2_2_V_read(buf1_V_fu_704_p5),
    .src_buf3_0_V_read(src_buf3_V_0_0_reg_354),
    .src_buf3_1_V_read(src_buf3_0_V_reg_391),
    .src_buf3_2_V_read(buf2_V_fu_716_p5),
    .ap_return_0(call_ret_xFSobel3x3_fu_429_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_fu_429_ap_return_1)
);

xFGradientX3x3_0_0_s GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446(
    .ap_ready(GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446_ap_ready),
    .t0_V(src_buf1_V_0_0_reg_416),
    .t2_V(8'd0),
    .m0_V(src_buf2_V_0_0_reg_378),
    .m2_V(8'd0),
    .b0_V(src_buf3_V_0_0_reg_354),
    .b2_V(8'd0),
    .ap_return(GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446_ap_return)
);

xFGradientY3x3_0_0_s GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463(
    .ap_ready(GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463_ap_ready),
    .t0_V(src_buf1_V_0_0_reg_416),
    .t1_V(src_buf1_0_V_reg_404),
    .t2_V(8'd0),
    .b0_V(src_buf3_V_0_0_reg_354),
    .b1_V(src_buf3_0_V_reg_391),
    .b2_V(8'd0),
    .ap_return(GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463_ap_return)
);

sobel_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3eOg_U42(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_reg_822),
    .dout(buf0_V_fu_692_p5)
);

sobel_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3eOg_U43(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_2_reg_827),
    .dout(buf1_V_fu_704_p5)
);

sobel_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3eOg_U44(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_4_reg_832),
    .dout(buf2_V_fu_716_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln887_2_fu_665_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_fu_480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_assign_reg_296 <= read_index_fu_485_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        index_assign_reg_296 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_0_V_reg_404 <= buf0_V_fu_692_p5;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf1_0_V_reg_404 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_V_0_0_reg_416 <= src_buf1_0_V_reg_404;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf1_V_0_0_reg_416 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_0_V_reg_366 <= buf1_V_fu_704_p5;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf2_0_V_reg_366 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_V_0_0_reg_378 <= src_buf2_0_V_reg_366;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf2_V_0_0_reg_378 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_0_V_reg_391 <= buf2_V_fu_716_p5;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf3_0_V_reg_391 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_V_0_0_reg_354 <= src_buf3_0_V_reg_391;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf3_V_0_0_reg_354 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        t_V_1_reg_318 <= select_ln426_fu_750_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_318 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        t_V_2_reg_330 <= row_V_fu_758_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_2_reg_330 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        t_V_3_reg_342 <= col_V_1_reg_849;
    end else if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_3_reg_342 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_fu_480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_reg_307 <= col_V_fu_496_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_307 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln353_reg_813 <= add_ln353_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_V_1_reg_849 <= col_V_1_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln341_reg_776 <= icmp_ln341_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_2_reg_845 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln879_3_reg_861 <= icmp_ln879_3_fu_686_p2;
        zext_ln544_1_reg_854[12 : 0] <= zext_ln544_1_fu_676_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln879_3_reg_861_pp1_iter2_reg <= icmp_ln879_3_reg_861;
        icmp_ln887_2_reg_845_pp1_iter2_reg <= icmp_ln887_2_reg_845_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        icmp_ln887_1_reg_837 <= icmp_ln887_1_fu_637_p2;
        p_01392_0_fu_150 <= select_ln879_fu_597_p3;
        p_01396_0_fu_146 <= select_ln879_2_fu_613_p3;
        p_01400_0_fu_142 <= select_ln879_4_fu_629_p3;
        select_ln879_2_reg_827 <= select_ln879_2_fu_613_p3;
        select_ln879_4_reg_832 <= select_ln879_4_fu_629_p3;
        select_ln879_reg_822 <= select_ln879_fu_597_p3;
        trunc_ln321_reg_841 <= trunc_ln321_fu_642_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln887_2_reg_845 <= icmp_ln887_2_fu_665_p2;
        icmp_ln887_2_reg_845_pp1_iter1_reg <= icmp_ln887_2_reg_845;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_fu_480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln544_reg_785[12 : 0] <= zext_ln544_fu_491_p1[12 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln341_fu_480_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_t_V_3_phi_fu_346_p4 = col_V_1_reg_849;
    end else begin
        ap_phi_mux_t_V_3_phi_fu_346_p4 = t_V_3_reg_342;
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_841 == 2'd0))) begin
        buf_0_V_address1 = buf_0_V_addr_1_gep_fu_252_p3;
    end else if (((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_832 == 2'd0))) begin
        buf_0_V_address1 = zext_ln544_1_fu_676_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln544_fu_491_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln321_reg_841 == 2'd0)) | ((icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (select_ln879_4_reg_832 == 2'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_841 == 2'd0))) begin
        buf_0_V_d1 = p_src_mat_data_V_dout;
    end else if ((((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_832 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln321_reg_841 == 2'd0)) | ((icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (select_ln879_4_reg_832 == 2'd0)) | ((icmp_ln341_fu_480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_841 == 2'd1))) begin
        buf_1_V_address1 = buf_1_V_addr_1_gep_fu_258_p3;
    end else if (((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_832 == 2'd1))) begin
        buf_1_V_address1 = zext_ln544_1_fu_676_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = zext_ln544_reg_785;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln321_reg_841 == 2'd1)) | ((icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (select_ln879_4_reg_832 == 2'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_832 == 2'd1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_841 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_d1 = p_src_mat_data_V_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln321_reg_841 == 2'd1)) | ((icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (select_ln879_4_reg_832 == 2'd1)) | ((icmp_ln341_reg_776 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_326)) begin
        if ((1'b1 == ap_condition_621)) begin
            buf_2_V_address1 = buf_2_V_addr_gep_fu_264_p3;
        end else if ((1'b1 == ap_condition_617)) begin
            buf_2_V_address1 = zext_ln544_1_fu_676_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln321_reg_841 == 2'd1) & ~(trunc_ln321_reg_841 == 2'd0) & (icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(select_ln879_4_reg_832 == 2'd1) & ~(select_ln879_4_reg_832 == 2'd0) & (icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_326)) begin
        if ((1'b1 == ap_condition_621)) begin
            buf_2_V_d1 = p_src_mat_data_V_dout;
        end else if ((1'b1 == ap_condition_617)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln321_reg_841 == 2'd1) & ~(trunc_ln321_reg_841 == 2'd0) & (icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(select_ln879_4_reg_832 == 2'd1) & ~(select_ln879_4_reg_832 == 2'd0) & (icmp_ln887_2_reg_845 == 1'd1) & (icmp_ln887_1_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln879_3_reg_861_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        p_dst_matx_data_V_blk_n = p_dst_matx_data_V_full_n;
    end else begin
        p_dst_matx_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        p_dst_matx_data_V_din = GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_446_ap_return;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op138_write_state9 == 1'b1))) begin
        p_dst_matx_data_V_din = call_ret_xFSobel3x3_fu_429_ap_return_0;
    end else begin
        p_dst_matx_data_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op138_write_state9 == 1'b1)))) begin
        p_dst_matx_data_V_write = 1'b1;
    end else begin
        p_dst_matx_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln879_3_reg_861_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        p_dst_maty_data_V_blk_n = p_dst_maty_data_V_full_n;
    end else begin
        p_dst_maty_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        p_dst_maty_data_V_din = GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_463_ap_return;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op139_write_state9 == 1'b1))) begin
        p_dst_maty_data_V_din = call_ret_xFSobel3x3_fu_429_ap_return_1;
    end else begin
        p_dst_maty_data_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op139_write_state9 == 1'b1)))) begin
        p_dst_maty_data_V_write = 1'b1;
    end else begin
        p_dst_maty_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln341_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_mat_data_V_blk_n = p_src_mat_data_V_empty_n;
    end else begin
        p_src_mat_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op100_read_state7 == 1'b1)) | ((icmp_ln341_reg_776 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_mat_data_V_read = 1'b1;
    end else begin
        p_src_mat_data_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln341_fu_480_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln341_fu_480_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln887_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln353_fu_505_p2 = (zext_ln353_fu_502_p1 + 17'd1);

assign and_ln879_fu_581_p2 = (xor_ln879_fu_575_p2 & icmp_ln879_1_fu_539_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln341_reg_776 == 1'd0) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln341_reg_776 == 1'd0) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((p_dst_maty_data_V_full_n == 1'b0) & (ap_predicate_op139_write_state9 == 1'b1)) | ((p_dst_matx_data_V_full_n == 1'b0) & (ap_predicate_op138_write_state9 == 1'b1)))) | ((p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((p_dst_maty_data_V_full_n == 1'b0) & (ap_predicate_op139_write_state9 == 1'b1)) | ((p_dst_matx_data_V_full_n == 1'b0) & (ap_predicate_op138_write_state9 == 1'b1)))) | ((p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((p_dst_maty_data_V_full_n == 1'b0) & (ap_predicate_op139_write_state9 == 1'b1)) | ((p_dst_matx_data_V_full_n == 1'b0) & (ap_predicate_op138_write_state9 == 1'b1)))) | ((p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state10 = ((p_dst_maty_data_V_full_n == 1'b0) | (p_dst_matx_data_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln341_reg_776 == 1'd0) & (p_src_mat_data_V_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((p_src_mat_data_V_empty_n == 1'b0) & (ap_predicate_op100_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = (((p_dst_maty_data_V_full_n == 1'b0) & (ap_predicate_op139_write_state9 == 1'b1)) | ((p_dst_matx_data_V_full_n == 1'b0) & (ap_predicate_op138_write_state9 == 1'b1)));
end

always @ (*) begin
    ap_condition_326 = ((icmp_ln887_2_reg_845 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_617 = (~(select_ln879_4_reg_832 == 2'd1) & ~(select_ln879_4_reg_832 == 2'd0) & (icmp_ln887_1_reg_837 == 1'd0));
end

always @ (*) begin
    ap_condition_621 = (~(trunc_ln321_reg_841 == 2'd1) & ~(trunc_ln321_reg_841 == 2'd0) & (icmp_ln887_1_reg_837 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op100_read_state7 = ((icmp_ln887_1_reg_837 == 1'd1) & (icmp_ln887_2_reg_845 == 1'd1));
end

always @ (*) begin
    ap_predicate_op138_write_state9 = ((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (icmp_ln879_3_reg_861_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op139_write_state9 = ((icmp_ln887_2_reg_845_pp1_iter2_reg == 1'd1) & (icmp_ln879_3_reg_861_pp1_iter2_reg == 1'd0));
end

assign buf_0_V_addr_1_gep_fu_252_p3 = zext_ln544_1_fu_676_p1;

assign buf_0_V_address0 = zext_ln544_1_reg_854;

assign buf_1_V_addr_1_gep_fu_258_p3 = zext_ln544_1_fu_676_p1;

assign buf_1_V_address0 = zext_ln544_1_reg_854;

assign buf_2_V_addr_gep_fu_264_p3 = zext_ln544_1_fu_676_p1;

assign buf_2_V_address0 = zext_ln544_1_reg_854;

assign col_V_1_fu_670_p2 = (ap_phi_mux_t_V_3_phi_fu_346_p4 + 13'd1);

assign col_V_fu_496_p2 = (t_V_reg_307 + 13'd1);

assign icmp_ln341_fu_480_p2 = ((index_assign_reg_296 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_539_p2 = ((t_V_1_reg_318 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_545_p2 = ((t_V_1_reg_318 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_686_p2 = ((t_V_3_reg_342 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_744_p2 = ((row_ind_V_fu_738_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_533_p2 = ((t_V_1_reg_318 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_637_p2 = ((zext_ln887_fu_529_p1 < img_height) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_665_p2 = ((zext_ln887_2_fu_661_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_515_p2 = ((zext_ln887_1_fu_511_p1 < add_ln353_reg_813) ? 1'b1 : 1'b0);

assign or_ln879_fu_591_p2 = (icmp_ln879_fu_533_p2 | and_ln879_fu_581_p2);

assign read_index_fu_485_p2 = (index_assign_reg_296 + 16'd1);

assign row_V_fu_758_p2 = (t_V_2_reg_330 + 13'd1);

assign row_ind_V_fu_738_p2 = (t_V_1_reg_318 + 13'd1);

assign select_ln366_1_fu_559_p3 = ((icmp_ln879_2_fu_545_p2[0:0] === 1'b1) ? 2'd0 : p_01396_0_fu_146);

assign select_ln366_2_fu_567_p3 = ((icmp_ln879_2_fu_545_p2[0:0] === 1'b1) ? 2'd1 : p_01400_0_fu_142);

assign select_ln366_fu_551_p3 = ((icmp_ln879_2_fu_545_p2[0:0] === 1'b1) ? 2'd2 : p_01392_0_fu_150);

assign select_ln426_fu_750_p3 = ((icmp_ln879_4_fu_744_p2[0:0] === 1'b1) ? 13'd0 : row_ind_V_fu_738_p2);

assign select_ln879_1_fu_605_p3 = ((and_ln879_fu_581_p2[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign select_ln879_2_fu_613_p3 = ((or_ln879_fu_591_p2[0:0] === 1'b1) ? select_ln879_1_fu_605_p3 : select_ln366_1_fu_559_p3);

assign select_ln879_3_fu_621_p3 = ((and_ln879_fu_581_p2[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln879_4_fu_629_p3 = ((or_ln879_fu_591_p2[0:0] === 1'b1) ? select_ln879_3_fu_621_p3 : select_ln366_2_fu_567_p3);

assign select_ln879_fu_597_p3 = ((or_ln879_fu_591_p2[0:0] === 1'b1) ? zext_ln879_fu_587_p1 : select_ln366_fu_551_p3);

assign trunc_ln321_fu_642_p1 = t_V_1_reg_318[1:0];

assign xor_ln879_fu_575_p2 = (icmp_ln879_fu_533_p2 ^ 1'd1);

assign zext_ln353_fu_502_p1 = img_height;

assign zext_ln544_1_fu_676_p1 = t_V_3_reg_342;

assign zext_ln544_fu_491_p1 = t_V_reg_307;

assign zext_ln879_fu_587_p1 = and_ln879_fu_581_p2;

assign zext_ln887_1_fu_511_p1 = t_V_2_reg_330;

assign zext_ln887_2_fu_661_p1 = ap_phi_mux_t_V_3_phi_fu_346_p4;

assign zext_ln887_fu_529_p1 = t_V_2_reg_330;

always @ (posedge ap_clk) begin
    zext_ln544_reg_785[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln544_1_reg_854[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //xFSobelFilter3x3
























































































