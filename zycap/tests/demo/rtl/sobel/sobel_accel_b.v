// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_accel,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.230000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1230,HLS_SYN_LUT=2814,HLS_VERSION=2019_2}" *)

module sobel_accel_b (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_r_TDATA,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TUSER,
        input_r_TLAST,
        input_r_TID,
        input_r_TDEST,
        output_r_TDATA,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TUSER,
        output_r_TLAST,
        output_r_TID,
        output_r_TDEST,
        input_r_TVALID,
        input_r_TREADY,
        output_r_TVALID,
        output_r_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (4);
parameter C_S_AXI_WSTRB_WIDTH = (4);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [63:0] input_r_TDATA;
input  [7:0] input_r_TKEEP;
input  [7:0] input_r_TSTRB;
input   input_r_TUSER;
input   input_r_TLAST;
input   input_r_TID;
input   input_r_TDEST;
output  [63:0] output_r_TDATA;
output  [7:0] output_r_TKEEP;
output  [7:0] output_r_TSTRB;
output   output_r_TUSER;
output   output_r_TLAST;
output   output_r_TID;
output   output_r_TDEST;
input   input_r_TVALID;
output   input_r_TREADY;
output   output_r_TVALID;
input   output_r_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [15:0] rows;
wire   [15:0] cols;
wire    Block_Mat_exit215_pr_U0_ap_start;
wire    Block_Mat_exit215_pr_U0_start_full_n;
wire    Block_Mat_exit215_pr_U0_ap_done;
wire    Block_Mat_exit215_pr_U0_ap_continue;
wire    Block_Mat_exit215_pr_U0_ap_idle;
wire    Block_Mat_exit215_pr_U0_ap_ready;
wire    Block_Mat_exit215_pr_U0_start_out;
wire    Block_Mat_exit215_pr_U0_start_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_src_rows_out_din;
wire    Block_Mat_exit215_pr_U0_p_src_rows_out_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_src_cols_out_din;
wire    Block_Mat_exit215_pr_U0_p_src_cols_out_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_dstgx_rows_out_din;
wire    Block_Mat_exit215_pr_U0_p_dstgx_rows_out_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_dstgx_cols_out_din;
wire    Block_Mat_exit215_pr_U0_p_dstgx_cols_out_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_out_rows_out_din;
wire    Block_Mat_exit215_pr_U0_p_out_rows_out_write;
wire   [15:0] Block_Mat_exit215_pr_U0_p_out_cols_out_din;
wire    Block_Mat_exit215_pr_U0_p_out_cols_out_write;
wire    AXIvideo2xfMat_U0_ap_start;
wire    AXIvideo2xfMat_U0_ap_done;
wire    AXIvideo2xfMat_U0_ap_continue;
wire    AXIvideo2xfMat_U0_ap_idle;
wire    AXIvideo2xfMat_U0_ap_ready;
wire    AXIvideo2xfMat_U0_start_out;
wire    AXIvideo2xfMat_U0_start_write;
wire    AXIvideo2xfMat_U0_input_r_TREADY;
wire    AXIvideo2xfMat_U0_img_rows_read;
wire    AXIvideo2xfMat_U0_img_cols_read;
wire   [7:0] AXIvideo2xfMat_U0_img_data_V_din;
wire    AXIvideo2xfMat_U0_img_data_V_write;
wire   [15:0] AXIvideo2xfMat_U0_img_rows_out_din;
wire    AXIvideo2xfMat_U0_img_rows_out_write;
wire   [15:0] AXIvideo2xfMat_U0_img_cols_out_din;
wire    AXIvideo2xfMat_U0_img_cols_out_write;
wire    Sobel_U0_ap_start;
wire    Sobel_U0_ap_done;
wire    Sobel_U0_ap_continue;
wire    Sobel_U0_ap_idle;
wire    Sobel_U0_ap_ready;
wire    Sobel_U0_p_src_mat_rows_read;
wire    Sobel_U0_p_src_mat_cols_read;
wire    Sobel_U0_p_src_mat_data_V_read;
wire   [7:0] Sobel_U0_p_dst_matx_data_V_din;
wire    Sobel_U0_p_dst_matx_data_V_write;
wire   [7:0] Sobel_U0_p_dst_maty_data_V_din;
wire    Sobel_U0_p_dst_maty_data_V_write;
wire    addWeighted_U0_ap_start;
wire    addWeighted_U0_ap_done;
wire    addWeighted_U0_ap_continue;
wire    addWeighted_U0_ap_idle;
wire    addWeighted_U0_ap_ready;
wire    addWeighted_U0_src1_rows_read;
wire    addWeighted_U0_src1_cols_read;
wire    addWeighted_U0_src1_data_V_read;
wire    addWeighted_U0_src2_data_V_read;
wire   [7:0] addWeighted_U0_dst_data_V_din;
wire    addWeighted_U0_dst_data_V_write;
wire    xfMat2AXIvideo_U0_ap_start;
wire    xfMat2AXIvideo_U0_ap_done;
wire    xfMat2AXIvideo_U0_ap_continue;
wire    xfMat2AXIvideo_U0_ap_idle;
wire    xfMat2AXIvideo_U0_ap_ready;
wire    xfMat2AXIvideo_U0_img_rows_read;
wire    xfMat2AXIvideo_U0_img_cols_read;
wire    xfMat2AXIvideo_U0_img_data_V_read;
wire   [63:0] xfMat2AXIvideo_U0_output_r_TDATA;
wire    xfMat2AXIvideo_U0_output_r_TVALID;
wire   [7:0] xfMat2AXIvideo_U0_output_r_TKEEP;
wire   [7:0] xfMat2AXIvideo_U0_output_r_TSTRB;
wire    xfMat2AXIvideo_U0_output_r_TUSER;
wire    xfMat2AXIvideo_U0_output_r_TLAST;
wire    xfMat2AXIvideo_U0_output_r_TID;
wire    xfMat2AXIvideo_U0_output_r_TDEST;
wire    ap_sync_continue;
wire    p_src_rows_c_full_n;
wire   [15:0] p_src_rows_c_dout;
wire    p_src_rows_c_empty_n;
wire    p_src_cols_c_full_n;
wire   [15:0] p_src_cols_c_dout;
wire    p_src_cols_c_empty_n;
wire    p_dstgx_rows_c_full_n;
wire   [15:0] p_dstgx_rows_c_dout;
wire    p_dstgx_rows_c_empty_n;
wire    p_dstgx_cols_c_full_n;
wire   [15:0] p_dstgx_cols_c_dout;
wire    p_dstgx_cols_c_empty_n;
wire    p_out_rows_c_full_n;
wire   [15:0] p_out_rows_c_dout;
wire    p_out_rows_c_empty_n;
wire    p_out_cols_c_full_n;
wire   [15:0] p_out_cols_c_dout;
wire    p_out_cols_c_empty_n;
wire    p_src_data_V_full_n;
wire   [7:0] p_src_data_V_dout;
wire    p_src_data_V_empty_n;
wire    p_src_rows_c15_full_n;
wire   [15:0] p_src_rows_c15_dout;
wire    p_src_rows_c15_empty_n;
wire    p_src_cols_c16_full_n;
wire   [15:0] p_src_cols_c16_dout;
wire    p_src_cols_c16_empty_n;
wire    p_dstgx_data_V_full_n;
wire   [7:0] p_dstgx_data_V_dout;
wire    p_dstgx_data_V_empty_n;
wire    p_dstgy_data_V_full_n;
wire   [7:0] p_dstgy_data_V_dout;
wire    p_dstgy_data_V_empty_n;
wire    p_out_data_V_full_n;
wire   [7:0] p_out_data_V_dout;
wire    p_out_data_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready;
wire    ap_sync_Block_Mat_exit215_pr_U0_ap_ready;
reg   [1:0] Block_Mat_exit215_pr_U0_ap_ready_count;
reg    ap_sync_reg_AXIvideo2xfMat_U0_ap_ready;
wire    ap_sync_AXIvideo2xfMat_U0_ap_ready;
reg   [1:0] AXIvideo2xfMat_U0_ap_ready_count;
wire    start_for_addWeighted_U0_din;
wire    start_for_addWeighted_U0_full_n;
wire    start_for_addWeighted_U0_dout;
wire    start_for_addWeighted_U0_empty_n;
wire    start_for_xfMat2AXIvideo_U0_din;
wire    start_for_xfMat2AXIvideo_U0_full_n;
wire    start_for_xfMat2AXIvideo_U0_dout;
wire    start_for_xfMat2AXIvideo_U0_empty_n;
wire    start_for_Sobel_U0_din;
wire    start_for_Sobel_U0_full_n;
wire    start_for_Sobel_U0_dout;
wire    start_for_Sobel_U0_empty_n;
wire    Sobel_U0_start_full_n;
wire    Sobel_U0_start_write;
wire    addWeighted_U0_start_full_n;
wire    addWeighted_U0_start_write;
wire    xfMat2AXIvideo_U0_start_full_n;
wire    xfMat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready = 1'b0;
#0 Block_Mat_exit215_pr_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIvideo2xfMat_U0_ap_ready = 1'b0;
#0 AXIvideo2xfMat_U0_ap_ready_count = 2'd0;
end

sobel_accel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
sobel_accel_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rows(rows),
    .cols(cols)
);

Block_Mat_exit215_pr Block_Mat_exit215_pr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit215_pr_U0_ap_start),
    .start_full_n(Block_Mat_exit215_pr_U0_start_full_n),
    .ap_done(Block_Mat_exit215_pr_U0_ap_done),
    .ap_continue(Block_Mat_exit215_pr_U0_ap_continue),
    .ap_idle(Block_Mat_exit215_pr_U0_ap_idle),
    .ap_ready(Block_Mat_exit215_pr_U0_ap_ready),
    .start_out(Block_Mat_exit215_pr_U0_start_out),
    .start_write(Block_Mat_exit215_pr_U0_start_write),
    .rows(rows),
    .cols(cols),
    .p_src_rows_out_din(Block_Mat_exit215_pr_U0_p_src_rows_out_din),
    .p_src_rows_out_full_n(p_src_rows_c_full_n),
    .p_src_rows_out_write(Block_Mat_exit215_pr_U0_p_src_rows_out_write),
    .p_src_cols_out_din(Block_Mat_exit215_pr_U0_p_src_cols_out_din),
    .p_src_cols_out_full_n(p_src_cols_c_full_n),
    .p_src_cols_out_write(Block_Mat_exit215_pr_U0_p_src_cols_out_write),
    .p_dstgx_rows_out_din(Block_Mat_exit215_pr_U0_p_dstgx_rows_out_din),
    .p_dstgx_rows_out_full_n(p_dstgx_rows_c_full_n),
    .p_dstgx_rows_out_write(Block_Mat_exit215_pr_U0_p_dstgx_rows_out_write),
    .p_dstgx_cols_out_din(Block_Mat_exit215_pr_U0_p_dstgx_cols_out_din),
    .p_dstgx_cols_out_full_n(p_dstgx_cols_c_full_n),
    .p_dstgx_cols_out_write(Block_Mat_exit215_pr_U0_p_dstgx_cols_out_write),
    .p_out_rows_out_din(Block_Mat_exit215_pr_U0_p_out_rows_out_din),
    .p_out_rows_out_full_n(p_out_rows_c_full_n),
    .p_out_rows_out_write(Block_Mat_exit215_pr_U0_p_out_rows_out_write),
    .p_out_cols_out_din(Block_Mat_exit215_pr_U0_p_out_cols_out_din),
    .p_out_cols_out_full_n(p_out_cols_c_full_n),
    .p_out_cols_out_write(Block_Mat_exit215_pr_U0_p_out_cols_out_write)
);

AXIvideo2xfMat AXIvideo2xfMat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_U0_ap_start),
    .start_full_n(start_for_Sobel_U0_full_n),
    .ap_done(AXIvideo2xfMat_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_U0_ap_ready),
    .start_out(AXIvideo2xfMat_U0_start_out),
    .start_write(AXIvideo2xfMat_U0_start_write),
    .input_r_TDATA(input_r_TDATA),
    .input_r_TVALID(input_r_TVALID),
    .input_r_TREADY(AXIvideo2xfMat_U0_input_r_TREADY),
    .input_r_TKEEP(input_r_TKEEP),
    .input_r_TSTRB(input_r_TSTRB),
    .input_r_TUSER(input_r_TUSER),
    .input_r_TLAST(input_r_TLAST),
    .input_r_TID(input_r_TID),
    .input_r_TDEST(input_r_TDEST),
    .img_rows_dout(p_src_rows_c_dout),
    .img_rows_empty_n(p_src_rows_c_empty_n),
    .img_rows_read(AXIvideo2xfMat_U0_img_rows_read),
    .img_cols_dout(p_src_cols_c_dout),
    .img_cols_empty_n(p_src_cols_c_empty_n),
    .img_cols_read(AXIvideo2xfMat_U0_img_cols_read),
    .img_data_V_din(AXIvideo2xfMat_U0_img_data_V_din),
    .img_data_V_full_n(p_src_data_V_full_n),
    .img_data_V_write(AXIvideo2xfMat_U0_img_data_V_write),
    .img_rows_out_din(AXIvideo2xfMat_U0_img_rows_out_din),
    .img_rows_out_full_n(p_src_rows_c15_full_n),
    .img_rows_out_write(AXIvideo2xfMat_U0_img_rows_out_write),
    .img_cols_out_din(AXIvideo2xfMat_U0_img_cols_out_din),
    .img_cols_out_full_n(p_src_cols_c16_full_n),
    .img_cols_out_write(AXIvideo2xfMat_U0_img_cols_out_write)
);

Sobel Sobel_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Sobel_U0_ap_start),
    .ap_done(Sobel_U0_ap_done),
    .ap_continue(Sobel_U0_ap_continue),
    .ap_idle(Sobel_U0_ap_idle),
    .ap_ready(Sobel_U0_ap_ready),
    .p_src_mat_rows_dout(p_src_rows_c15_dout),
    .p_src_mat_rows_empty_n(p_src_rows_c15_empty_n),
    .p_src_mat_rows_read(Sobel_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(p_src_cols_c16_dout),
    .p_src_mat_cols_empty_n(p_src_cols_c16_empty_n),
    .p_src_mat_cols_read(Sobel_U0_p_src_mat_cols_read),
    .p_src_mat_data_V_dout(p_src_data_V_dout),
    .p_src_mat_data_V_empty_n(p_src_data_V_empty_n),
    .p_src_mat_data_V_read(Sobel_U0_p_src_mat_data_V_read),
    .p_dst_matx_data_V_din(Sobel_U0_p_dst_matx_data_V_din),
    .p_dst_matx_data_V_full_n(p_dstgx_data_V_full_n),
    .p_dst_matx_data_V_write(Sobel_U0_p_dst_matx_data_V_write),
    .p_dst_maty_data_V_din(Sobel_U0_p_dst_maty_data_V_din),
    .p_dst_maty_data_V_full_n(p_dstgy_data_V_full_n),
    .p_dst_maty_data_V_write(Sobel_U0_p_dst_maty_data_V_write)
);

addWeighted addWeighted_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(addWeighted_U0_ap_start),
    .ap_done(addWeighted_U0_ap_done),
    .ap_continue(addWeighted_U0_ap_continue),
    .ap_idle(addWeighted_U0_ap_idle),
    .ap_ready(addWeighted_U0_ap_ready),
    .src1_rows_dout(p_dstgx_rows_c_dout),
    .src1_rows_empty_n(p_dstgx_rows_c_empty_n),
    .src1_rows_read(addWeighted_U0_src1_rows_read),
    .src1_cols_dout(p_dstgx_cols_c_dout),
    .src1_cols_empty_n(p_dstgx_cols_c_empty_n),
    .src1_cols_read(addWeighted_U0_src1_cols_read),
    .src1_data_V_dout(p_dstgx_data_V_dout),
    .src1_data_V_empty_n(p_dstgx_data_V_empty_n),
    .src1_data_V_read(addWeighted_U0_src1_data_V_read),
    .src2_data_V_dout(p_dstgy_data_V_dout),
    .src2_data_V_empty_n(p_dstgy_data_V_empty_n),
    .src2_data_V_read(addWeighted_U0_src2_data_V_read),
    .dst_data_V_din(addWeighted_U0_dst_data_V_din),
    .dst_data_V_full_n(p_out_data_V_full_n),
    .dst_data_V_write(addWeighted_U0_dst_data_V_write)
);

xfMat2AXIvideo xfMat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2AXIvideo_U0_ap_start),
    .ap_done(xfMat2AXIvideo_U0_ap_done),
    .ap_continue(xfMat2AXIvideo_U0_ap_continue),
    .ap_idle(xfMat2AXIvideo_U0_ap_idle),
    .ap_ready(xfMat2AXIvideo_U0_ap_ready),
    .img_rows_dout(p_out_rows_c_dout),
    .img_rows_empty_n(p_out_rows_c_empty_n),
    .img_rows_read(xfMat2AXIvideo_U0_img_rows_read),
    .img_cols_dout(p_out_cols_c_dout),
    .img_cols_empty_n(p_out_cols_c_empty_n),
    .img_cols_read(xfMat2AXIvideo_U0_img_cols_read),
    .img_data_V_dout(p_out_data_V_dout),
    .img_data_V_empty_n(p_out_data_V_empty_n),
    .img_data_V_read(xfMat2AXIvideo_U0_img_data_V_read),
    .output_r_TDATA(xfMat2AXIvideo_U0_output_r_TDATA),
    .output_r_TVALID(xfMat2AXIvideo_U0_output_r_TVALID),
    .output_r_TREADY(output_r_TREADY),
    .output_r_TKEEP(xfMat2AXIvideo_U0_output_r_TKEEP),
    .output_r_TSTRB(xfMat2AXIvideo_U0_output_r_TSTRB),
    .output_r_TUSER(xfMat2AXIvideo_U0_output_r_TUSER),
    .output_r_TLAST(xfMat2AXIvideo_U0_output_r_TLAST),
    .output_r_TID(xfMat2AXIvideo_U0_output_r_TID),
    .output_r_TDEST(xfMat2AXIvideo_U0_output_r_TDEST)
);

fifo_w16_d2_A p_src_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_src_rows_out_din),
    .if_full_n(p_src_rows_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_src_rows_out_write),
    .if_dout(p_src_rows_c_dout),
    .if_empty_n(p_src_rows_c_empty_n),
    .if_read(AXIvideo2xfMat_U0_img_rows_read)
);

fifo_w16_d2_A p_src_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_src_cols_out_din),
    .if_full_n(p_src_cols_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_src_cols_out_write),
    .if_dout(p_src_cols_c_dout),
    .if_empty_n(p_src_cols_c_empty_n),
    .if_read(AXIvideo2xfMat_U0_img_cols_read)
);

fifo_w16_d4_A p_dstgx_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_dstgx_rows_out_din),
    .if_full_n(p_dstgx_rows_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_dstgx_rows_out_write),
    .if_dout(p_dstgx_rows_c_dout),
    .if_empty_n(p_dstgx_rows_c_empty_n),
    .if_read(addWeighted_U0_src1_rows_read)
);

fifo_w16_d4_A p_dstgx_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_dstgx_cols_out_din),
    .if_full_n(p_dstgx_cols_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_dstgx_cols_out_write),
    .if_dout(p_dstgx_cols_c_dout),
    .if_empty_n(p_dstgx_cols_c_empty_n),
    .if_read(addWeighted_U0_src1_cols_read)
);

fifo_w16_d5_A p_out_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_out_rows_out_din),
    .if_full_n(p_out_rows_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_out_rows_out_write),
    .if_dout(p_out_rows_c_dout),
    .if_empty_n(p_out_rows_c_empty_n),
    .if_read(xfMat2AXIvideo_U0_img_rows_read)
);

fifo_w16_d5_A p_out_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit215_pr_U0_p_out_cols_out_din),
    .if_full_n(p_out_cols_c_full_n),
    .if_write(Block_Mat_exit215_pr_U0_p_out_cols_out_write),
    .if_dout(p_out_cols_c_dout),
    .if_empty_n(p_out_cols_c_empty_n),
    .if_read(xfMat2AXIvideo_U0_img_cols_read)
);

fifo_w8_d2_A p_src_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_U0_img_data_V_din),
    .if_full_n(p_src_data_V_full_n),
    .if_write(AXIvideo2xfMat_U0_img_data_V_write),
    .if_dout(p_src_data_V_dout),
    .if_empty_n(p_src_data_V_empty_n),
    .if_read(Sobel_U0_p_src_mat_data_V_read)
);

fifo_w16_d2_A p_src_rows_c15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_U0_img_rows_out_din),
    .if_full_n(p_src_rows_c15_full_n),
    .if_write(AXIvideo2xfMat_U0_img_rows_out_write),
    .if_dout(p_src_rows_c15_dout),
    .if_empty_n(p_src_rows_c15_empty_n),
    .if_read(Sobel_U0_p_src_mat_rows_read)
);

fifo_w16_d2_A p_src_cols_c16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_U0_img_cols_out_din),
    .if_full_n(p_src_cols_c16_full_n),
    .if_write(AXIvideo2xfMat_U0_img_cols_out_write),
    .if_dout(p_src_cols_c16_dout),
    .if_empty_n(p_src_cols_c16_empty_n),
    .if_read(Sobel_U0_p_src_mat_cols_read)
);

fifo_w8_d2_A p_dstgx_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Sobel_U0_p_dst_matx_data_V_din),
    .if_full_n(p_dstgx_data_V_full_n),
    .if_write(Sobel_U0_p_dst_matx_data_V_write),
    .if_dout(p_dstgx_data_V_dout),
    .if_empty_n(p_dstgx_data_V_empty_n),
    .if_read(addWeighted_U0_src1_data_V_read)
);

fifo_w8_d2_A p_dstgy_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Sobel_U0_p_dst_maty_data_V_din),
    .if_full_n(p_dstgy_data_V_full_n),
    .if_write(Sobel_U0_p_dst_maty_data_V_write),
    .if_dout(p_dstgy_data_V_dout),
    .if_empty_n(p_dstgy_data_V_empty_n),
    .if_read(addWeighted_U0_src2_data_V_read)
);

fifo_w8_d2_A p_out_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(addWeighted_U0_dst_data_V_din),
    .if_full_n(p_out_data_V_full_n),
    .if_write(addWeighted_U0_dst_data_V_write),
    .if_dout(p_out_data_V_dout),
    .if_empty_n(p_out_data_V_empty_n),
    .if_read(xfMat2AXIvideo_U0_img_data_V_read)
);

start_for_addWeigfYi start_for_addWeigfYi_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_addWeighted_U0_din),
    .if_full_n(start_for_addWeighted_U0_full_n),
    .if_write(Block_Mat_exit215_pr_U0_start_write),
    .if_dout(start_for_addWeighted_U0_dout),
    .if_empty_n(start_for_addWeighted_U0_empty_n),
    .if_read(addWeighted_U0_ap_ready)
);

start_for_xfMat2Ag8j start_for_xfMat2Ag8j_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_xfMat2AXIvideo_U0_din),
    .if_full_n(start_for_xfMat2AXIvideo_U0_full_n),
    .if_write(Block_Mat_exit215_pr_U0_start_write),
    .if_dout(start_for_xfMat2AXIvideo_U0_dout),
    .if_empty_n(start_for_xfMat2AXIvideo_U0_empty_n),
    .if_read(xfMat2AXIvideo_U0_ap_ready)
);

start_for_Sobel_U0 start_for_Sobel_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Sobel_U0_din),
    .if_full_n(start_for_Sobel_U0_full_n),
    .if_write(AXIvideo2xfMat_U0_start_write),
    .if_dout(start_for_Sobel_U0_dout),
    .if_empty_n(start_for_Sobel_U0_empty_n),
    .if_read(Sobel_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= ap_sync_AXIvideo2xfMat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready <= ap_sync_Block_Mat_exit215_pr_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == AXIvideo2xfMat_U0_ap_ready))) begin
        AXIvideo2xfMat_U0_ap_ready_count <= (AXIvideo2xfMat_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIvideo2xfMat_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIvideo2xfMat_U0_ap_ready_count <= (AXIvideo2xfMat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_Mat_exit215_pr_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_Mat_exit215_pr_U0_ap_ready_count <= (Block_Mat_exit215_pr_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Block_Mat_exit215_pr_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Block_Mat_exit215_pr_U0_ap_ready_count <= (Block_Mat_exit215_pr_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2xfMat_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_U0_ap_start = ((ap_sync_reg_AXIvideo2xfMat_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit215_pr_U0_ap_continue = 1'b1;

assign Block_Mat_exit215_pr_U0_ap_start = ((ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit215_pr_U0_start_full_n = (start_for_xfMat2AXIvideo_U0_full_n & start_for_addWeighted_U0_full_n);

assign Sobel_U0_ap_continue = 1'b1;

assign Sobel_U0_ap_start = start_for_Sobel_U0_empty_n;

assign Sobel_U0_start_full_n = 1'b1;

assign Sobel_U0_start_write = 1'b0;

assign addWeighted_U0_ap_continue = 1'b1;

assign addWeighted_U0_ap_start = start_for_addWeighted_U0_empty_n;

assign addWeighted_U0_start_full_n = 1'b1;

assign addWeighted_U0_start_write = 1'b0;

assign ap_done = xfMat2AXIvideo_U0_ap_done;

assign ap_idle = (xfMat2AXIvideo_U0_ap_idle & addWeighted_U0_ap_idle & Sobel_U0_ap_idle & Block_Mat_exit215_pr_U0_ap_idle & AXIvideo2xfMat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2xfMat_U0_ap_ready = (ap_sync_reg_AXIvideo2xfMat_U0_ap_ready | AXIvideo2xfMat_U0_ap_ready);

assign ap_sync_Block_Mat_exit215_pr_U0_ap_ready = (ap_sync_reg_Block_Mat_exit215_pr_U0_ap_ready | Block_Mat_exit215_pr_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = xfMat2AXIvideo_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_Mat_exit215_pr_U0_ap_ready & ap_sync_AXIvideo2xfMat_U0_ap_ready);

assign input_r_TREADY = AXIvideo2xfMat_U0_input_r_TREADY;

assign output_r_TDATA = xfMat2AXIvideo_U0_output_r_TDATA;

assign output_r_TDEST = xfMat2AXIvideo_U0_output_r_TDEST;

assign output_r_TID = xfMat2AXIvideo_U0_output_r_TID;

assign output_r_TKEEP = xfMat2AXIvideo_U0_output_r_TKEEP;

assign output_r_TLAST = xfMat2AXIvideo_U0_output_r_TLAST;

assign output_r_TSTRB = xfMat2AXIvideo_U0_output_r_TSTRB;

assign output_r_TUSER = xfMat2AXIvideo_U0_output_r_TUSER;

assign output_r_TVALID = xfMat2AXIvideo_U0_output_r_TVALID;

assign start_for_Sobel_U0_din = 1'b1;

assign start_for_addWeighted_U0_din = 1'b1;

assign start_for_xfMat2AXIvideo_U0_din = 1'b1;

assign xfMat2AXIvideo_U0_ap_continue = 1'b1;

assign xfMat2AXIvideo_U0_ap_start = start_for_xfMat2AXIvideo_U0_empty_n;

assign xfMat2AXIvideo_U0_start_full_n = 1'b1;

assign xfMat2AXIvideo_U0_start_write = 1'b0;

endmodule //sobel_accel




























































































